{"version":3,"sources":["components/KanbanColumn/style.js","components/Task/style.js","components/UserIcon/style.js","components/UserIcon/UserIcon.tsx","components/UserIconList/style.js","components/UserIconList/UserIconList.js","components/Task/Task.js","components/BlueBtn/style.js","components/BlueBtn/BlueBtn.tsx","components/KanbanColumn/KanbanColumn.js","pages/DashboardPage/style.js","components/GrayButton/style.js","components/GrayButton/GrayButton.tsx","components/Description/style.js","components/Description/Description.js","utils/convertDate.ts","components/Attachment/style.js","components/Attachment/Attachment.tsx","components/AttachmentsList/style.js","components/AttachmentsList/AttachmentsList.tsx","components/Comment/style.js","components/Comment/ButtonComment.js","components/Comment/Comment.js","components/CommentInput/style.js","components/CommentInput/CommentInput.js","components/ImagePicker/style.js","components/SearchBar/ActionIconSearch.tsx","components/SearchBar/SearchButton.tsx","components/SearchBar/styles.ts","components/SearchBar/SearchBar.tsx","components/ImagePicker/ImagePicker.js","utils/functions.js","config.ts","components/RedButton/style.js","components/RedButton/RedButton.tsx","components/MembersList/style.js","components/MembersList/MembersList.tsx","components/MemberCardContainer/style.js","components/MemberCardContainer/MemberCardContainer.tsx","components/GrayButtonFilled/style.js","components/GrayButtonFilled/GrayButtonFilled.tsx","logic/generateAttachment.ts","logic/randomUser.ts","logic/generateComment.ts","components/TaskModal/style.js","components/TaskModal/TaskModal.tsx","logic/generateId.ts","logic/generateImage.ts","logic/generateTask.ts","logic/generateBoard.js","contexts/DashboardsContext.tsx","components/DashboardDrawer/style.js","components/DashboardDrawer/DashboardDrawer.tsx","pages/DashboardPage/DashboardPage.js","components/DashboardModal/style.js","components/DashboardModal/DashboardModal.tsx","components/Dashboard/style.js","components/Dashboard/Dashboard.js","pages/DashboardsPage/style.ts","pages/DashboardsPage/DashboardsPage.tsx","routes/RoutesDashboards.js","components/Navbar/styles.ts","components/Navbar/Navbar.tsx","contexts/ThemeContext.tsx","App.tsx","index.tsx"],"names":["useStyles","createStyles","theme","task","margin","title","fontFamily","other","secondaryFont","column","width","padding","marginTop","taskMain","border","borderColor","colors","gray","borderRadius","radius","md","display","flexDirection","alignItems","attachment","fontSize","iconsAlignRight","marginLeft","color","marginRight","input","buttonSave","placeholder","backgroundColor","textTransform","UserIcon","username","imgUrl","classes","Avatar","classNames","src","size","name","firstLetters","match","join","getUserNameInitials","userIconList","UserIconList","listOfUsers","isAppendable","onAppendHandler","iconLimit","isAboveLimit","length","numberAboveLimit","className","slice","map","user","profilePictureURL","id","Text","ActionIcon","variant","onClick","Task","columnId","imageCover","assignedUsers","clickEventHandler","numberOfComments","numberOfAttachments","onCreateTaskHandler","useState","newTitle","setNewTitle","onKeyUp","e","which","role","tabIndex","Image","alt","fit","Input","onChange","target","value","Button","leftIcon","root","maxWidth","transition","fn","darken","inner","justifyContent","BlueBtn","children","rightIcon","KanbanColumn","tasks","onAddHandler","onTaskInitializeHandler","onTaskClickHandler","undefined","index","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","imageCoverURL","assigneeList","columns","overflowX","buttonGrayRoot","lineHeight","grayButton","GrayButton","rest","outline","descriptionHeader","headings","fontWeight","button","textEditorArea","paddingTop","paddingBottom","buttonsArea","rootTextEditor","toolbarInner","Description","initialText","onTextSavedHandler","text","setText","isEditing","setEditing","refText","useRef","triggerEdit","onSaveText","current","RichTextEditor","toolbar","controls","onKeyDown","getHotkeyHandler","readOnly","convertDate","date","dateSplitArray","toLocaleDateString","timeZone","month","day","year","split","divBody","imagePlaceholder","divInfo","marginBottom","buttonDelete","red","buttonDownload","green","Attachment","itemUrl","fileName","onDeleteHandler","attachmentDate","height","withPlaceholder","align","component","href","download","attachmentHeader","grayBtn","attachmentSection","AttachmentsList","attachments","divUserInfo","divComment","divButtons","buttonSubtle","ButtonComment","onClickEvent","subtle","compact","Comment","userData","textContent","onEditHandler","editability","setEditability","currentContent","setCurrentContent","newDate","hour","minute","Container","Textarea","defaultValue","commentMain","alignSelf","CommentInput","onValueChangedHandler","onSubmitHandler","event","searchBar","photoSearchText","photoUnsplashText","imageResults","flexWrap","ActionIconSearch","SearchButton","borderWidth","wrapper","boxShadow","buttonRightSection","SearchBar","onKeywordChangeHandler","actionType","restProps","rightSection","pickerImagesSizes","ImagePicker","imageSize","onImageSelectedHandler","images","setImages","func","timer","args","clearTimeout","setTimeout","debounce","fetch","process","REACT_APP_UNSPLASH_API_KEY","then","res","json","results","catch","err","console","error","imageLink","urls","thumb","RedButton","membersListHeader","memberSection","gridTemplateColumns","admin","textAlign","MembersList","membersList","isDeletable","showButtons","memberCard","memberCardTitle","memberCardDescription","memberCardInput","filter","usersContainer","overflow","memberContainer","selectedUser","blue","icon","MemberCardContainer","addUserHandler","searchTerm","setSearchTerm","selectedUsers","setSelectedUsers","toLowerCase","includes","rightSectionWidth","UnstyledButton","indexOf","prevSelectedUsers","prevUserId","handleMemberClick","weight","Center","GrayButtonFilled","GenerateAttachment","this","generateAttachment","faker","past","datatype","uuid","Math","random","system","commonFileName","url","internet","RandomUser","firstName","lastName","generateRole","parseInt","String","GenerateComment","lorem","lines","modal","modalTitle","container","gridGap","closeButton","position","top","right","sidebar","gap","sidebarHeader","sectionTitle","actionSection","coverImage","objectFit","popTarget","cont","TaskModal","isOpen","commentsList","onCloseHandler","description","currentDescription","setCurrentDescription","currentAttachments","setCurrentAttachments","currentCoverImageURL","setCurrentCoverImageURL","currentAssigneesList","setCurrentAssigneesList","currentComments","setCurrentComments","currentInputComment","setCurrentInputComment","visibleImagePicker","setVisibleImagePicker","visibleMemberList","setVisibleMemberList","currentMemberList","setCurrentMemberList","commentOnDeleteHandler","deleteId","prevCurrentComments","handleCommentEdit","editedId","editedText","editedCommentIndex","findIndex","newComments","Modal","close","header","opened","onClose","comments","centered","descriptionText","newAttachment","getAttachment","prevState","prevCurrentAttachments","fakeComment","getComment","Date","Popover","placement","spacing","val","deletedID","newAssigneesList","splice","selectedUsersID","newAssignees","selectedUserID","find","assignee","member","some","selectedId","GenerateId","GenerateImage","image","GenerateTask","ListOfUsers","getId","sentence","paragraph","getAssigneeList","getImageCover","randomList","helpers","shuffle","numberOfAssignee","floor","i","push","getImage","Array","fill","normalUsers","admins","GenerateBoard","taskData","users","status","createdOn","board1","board2","board3","dashboardsDefaultValue","imageCoverUrl","createdAt","DashboardsContext","React","createContext","drawer","drawerHeader","authorHeader","authorSection","authorInfo","divider","scrollArea","paddingRight","DashboardDrawer","creationDate","isAdmin","setIsOpen","onDescriptionSaveHandler","onUserRemoveHandler","dashboardAuthor","parsedDate","Drawer","Divider","ScrollArea","style","DashboardPage","dashboardId","useParams","useContext","dashboards","setDashboards","currentDashboard","isModalOpen","setIsModalOpen","isDashboardDrawerOpen","setIsDashboardDrawerOpen","currentIssue","setCurrentIssue","onTaskEventHandler","taskId","findColumn","onAddColumnHandler","nanoid","newTask","newColumns","onTaskAddHandler","updatedTask","onDragEnd","result","findColumnSource","source","droppableId","findIssueSource","issueSourceIndex","issue","findColumnDestination","destination","droppableProps","columnToUpdate","updatedColumn","updatedDashboard","userId","cancelButton","row","footer","titleInput","tooltip","spanner","DashboardModal","boardId","generatedImage","currentCoverImageUrl","setCurrentCoverImageUrl","currentTitle","setCurrentTitle","isPrivate","setIsPrivate","tooltipOpened","setTooltipOpened","Tooltip","body","arrow","label","withArrow","invalid","dashboardMain","userList","Dashboard","onClickHandler","boardsHeader","gridTemplateRows","DashboardsPage","navigate","useNavigate","openDashboardModal","prevStateIsOpen","currentUser","newDashboard","routes","RoutesDashboards","path","element","navbar","navbar__logo","navbar__dashboard","navbar__options","navbar__options__select__wrapper","navbar__options__select__input","navbar__options__select__icon","navbar__options__select__rightSection","Navbar","boardTitle","loggedUser","wrapperProps","Select","data","ThemeProvider","MantineProvider","withNormalizeCSS","withGlobalStyles","App","memoizedDashboardsContext","useMemo","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2adb5334.chunk.js","sourcesContent":["import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  task: {\n    margin: 0\n  },\n  title: {\n    fontFamily: theme.other.secondaryFont\n  },\n  column: {\n    width: 350,\n    padding: 12,\n    '& > *': {\n      marginTop: 5\n    }\n  }\n}))\n\nexport default useStyles\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  taskMain: {\n    border: '1px solid',\n    borderColor: theme.colors.gray[2],\n    borderRadius: theme.radius.md,\n    padding: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: 5\n    }\n  },\n  title: { fontFamily: theme.other.secondaryFont },\n  attachment: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    fontSize: 10\n  },\n  iconsAlignRight: {\n    marginLeft: 'auto',\n    color: theme.colors.gray[3],\n    marginRight: 9\n  },\n  input: {\n    color: theme.colors.gray[3],\n    borderRadius: theme.radius.md,\n    width: '100%'\n  },\n  buttonSave: {\n    marginLeft: 'auto'\n  }\n}))\n\nexport default useStyles\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  placeholder: {\n    backgroundColor: theme.colors.gray[2],\n    color: '#FFF',\n    textTransform: 'uppercase'\n  }\n}))\n\nexport default useStyles\n","import { Avatar } from '@mantine/core'\nimport useStyles from './style'\n\ntype UserIconProps = {\n  username: string\n  imgUrl?: string\n}\n\nconst UserIcon = ({ username, imgUrl }: UserIconProps) => {\n  const { classes } = useStyles()\n  function getUserNameInitials(name: string) {\n    const firstLetters = name.match(/\\b(\\w)/g) // ['j','D']\n    return firstLetters?.join('')\n  }\n  return (\n    <Avatar classNames={{ placeholder: classes.placeholder }} src={imgUrl} radius=\"md\" size={28}>\n      {!imgUrl && getUserNameInitials(username)}\n    </Avatar>\n  )\n}\nexport default UserIcon\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  userIconList: {\n    display: 'flex',\n    alignItems: 'center',\n    '& > *': {\n      margin: 5\n    }\n  }\n}))\n\nexport default useStyles\n","import { ActionIcon, Text } from '@mantine/core'\nimport { MdAdd } from 'react-icons/md'\nimport PropTypes from 'prop-types'\nimport UserIcon from '../UserIcon/UserIcon'\nimport useStyles from './style'\n\nconst UserIconList = ({ listOfUsers, isAppendable, onAppendHandler, iconLimit }) => {\n  const { classes } = useStyles()\n  const isAboveLimit = listOfUsers.length > iconLimit\n  const numberAboveLimit = listOfUsers.length - iconLimit\n  return (\n    <div className={classes.userIconList}>\n      {listOfUsers.slice(0, iconLimit).map((user) => (\n        <UserIcon key={user.id} username={user.username} imgUrl={user.profilePictureURL} />\n      ))}\n      {isAboveLimit ? <Text size=\"sm\" color=\"gray\">{`+ ${numberAboveLimit} others`}</Text> : null}\n      {isAppendable ? (\n        <ActionIcon variant=\"filled\" size={28} color=\"blue\" radius=\"md\" onClick={onAppendHandler}>\n          <MdAdd size={30} />\n        </ActionIcon>\n      ) : null}\n    </div>\n  )\n}\nUserIconList.propTypes = {\n  listOfUsers: PropTypes.instanceOf(Array),\n  isAppendable: PropTypes.bool,\n  onAppendHandler: PropTypes.func,\n  iconLimit: PropTypes.number\n}\n\nexport default UserIconList\n","import { Button, Image, Input, Text } from '@mantine/core'\nimport { BsPaperclip, MdMessage } from 'react-icons/all'\nimport { MdAdd } from 'react-icons/md'\nimport { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport useStyles from './style'\nimport UserIconList from '../UserIconList/UserIconList'\n\nconst Task = ({\n  id,\n  columnId,\n  title,\n  imageCover,\n  assignedUsers,\n  clickEventHandler,\n  numberOfComments,\n  numberOfAttachments,\n  onCreateTaskHandler\n}) => {\n  const { classes } = useStyles()\n  const [newTitle, setNewTitle] = useState()\n  return title ? (\n    <div\n      className={classes.taskMain}\n      onClick={() => clickEventHandler(id, columnId)}\n      onKeyUp={(e) => {\n        if (e.which === 13) {\n          clickEventHandler()\n        }\n      }}\n      role=\"button\"\n      tabIndex={0}\n    >\n      {imageCover ? <Image src={imageCover} alt=\"cover\" fit=\"cover\" radius=\"md\" /> : null}\n      <Text className={classes.title}>{title}</Text>\n      <div className={classes.attachment}>\n        <UserIconList listOfUsers={assignedUsers} isAppendable iconLimit={3} />\n        <Text className={classes.iconsAlignRight} size=\"sm\">\n          <MdMessage />\n          {numberOfComments}\n          <BsPaperclip />\n          {numberOfAttachments}\n        </Text>\n      </div>\n    </div>\n  ) : (\n    <div className={classes.taskMain}>\n      <Input\n        className={classes.input}\n        placeholder=\"Add title\"\n        radius=\"md\"\n        onChange={(e) => setNewTitle(e.target.value)}\n      />\n      <Button\n        leftIcon={<MdAdd />}\n        className={classes.buttonSave}\n        onClick={() => onCreateTaskHandler(id, newTitle)}\n      >\n        Save\n      </Button>\n    </div>\n  )\n}\nTask.propTypes = {\n  title: PropTypes.string,\n  imageCover: PropTypes.string,\n  assignedUsers: PropTypes.instanceOf(Array),\n  clickEventHandler: PropTypes.func,\n  numberOfComments: PropTypes.number,\n  numberOfAttachments: PropTypes.number,\n  onCreateTaskHandler: PropTypes.func\n}\n\nexport default Task\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: '#DAE4FD',\n    color: '#2F80ED',\n    maxWidth: '100%',\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n    '&:hover': {\n      color: '#FFF',\n      backgroundColor: theme.fn.darken('#00acee', 0.1)\n    }\n  },\n  inner: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}))\n\nexport default useStyles\n","import { Button } from '@mantine/core'\nimport useStyles from './style'\n\ntype BlueBtnProps = {\n  children?: string\n  onClick: (e?: React.MouseEvent<HTMLElement>) => void\n  rightIcon?: React.ReactNode\n  leftIcon?: React.ReactNode\n}\n\nconst BlueBtn = ({ children, onClick, rightIcon, leftIcon }: BlueBtnProps) => {\n  const { classes } = useStyles()\n  return (\n    <Button\n      radius=\"md\"\n      onClick={onClick}\n      variant=\"outline\"\n      rightIcon={rightIcon}\n      leftIcon={leftIcon}\n      classNames={{ root: classes.root, inner: classes.inner }}\n    >\n      {children}\n    </Button>\n  )\n}\nexport default BlueBtn\n","import PropTypes from 'prop-types'\nimport { BsPlusLg } from 'react-icons/all'\nimport { Text } from '@mantine/core'\nimport { Draggable } from 'react-beautiful-dnd'\nimport useStyles from './style'\nimport Task from '../Task/Task'\nimport BlueBtn from '../BlueBtn/BlueBtn'\n\nconst KanbanColumn = ({\n  columnId,\n  title,\n  tasks,\n  onAddHandler,\n  onTaskInitializeHandler,\n  onTaskClickHandler,\n  onCreateTaskHandler\n}) => {\n  const { classes } = useStyles()\n\n  return title === undefined && tasks.length === 0 ? (\n    <div className={classes.column}>\n      <BlueBtn onClick={onAddHandler} rightIcon={<BsPlusLg />}>\n        Add another list\n      </BlueBtn>\n    </div>\n  ) : (\n    <div className={classes.column}>\n      <Text className={classes.title}>{title}</Text>\n\n      {tasks.map((task, index) => (\n        <Draggable draggableId={task.id} key={task.id} index={index}>\n          {(provided) => (\n            <div\n              className={classes.task}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <Task\n                {...provided.dragHandleProps}\n                id={task.id}\n                columnId={columnId}\n                title={task.title}\n                imageCover={task.imageCoverURL}\n                assignedUsers={task.assigneeList}\n                numberOfAttachments={task.attachment.length}\n                numberOfComments={1}\n                clickEventHandler={onTaskClickHandler}\n                onCreateTaskHandler={onCreateTaskHandler}\n              />\n            </div>\n          )}\n        </Draggable>\n      ))}\n      <BlueBtn onClick={() => onTaskInitializeHandler(columnId)} rightIcon={<BsPlusLg />}>\n        Add another card\n      </BlueBtn>\n    </div>\n  )\n}\n\nKanbanColumn.propTypes = {\n  title: PropTypes.string\n}\n\nexport default KanbanColumn\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  columns: {\n    display: 'flex',\n    padding: 10,\n    margin: 10,\n    overflowX: 'scroll'\n  },\n  buttonGrayRoot: {\n    backgroundColor: theme.colors.gray[0],\n    color: theme.colors.gray[6],\n    fontSize: '14px',\n    lineHeight: '18px',\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n    '&:hover': {\n      color: '#FFF',\n      backgroundColor: theme.fn.darken(theme.colors.gray[0], 0.2)\n    }\n  }\n}))\n\nexport default useStyles\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  grayButton: {\n    borderColor: theme.colors.gray[2],\n    color: theme.colors.gray[6]\n  }\n}))\n\nexport default useStyles\n","import { Button } from '@mantine/core'\nimport type { ButtonProps } from '@mantine/core'\nimport useStyles from './style'\n\nconst GrayButton = ({\n  leftIcon,\n  children,\n  onClick,\n  ...rest\n}: ButtonProps<'button'> | ButtonProps<'a'>) => {\n  const { classes } = useStyles()\n  return (\n    <Button\n      classNames={{ outline: classes.grayButton }}\n      leftIcon={leftIcon}\n      color=\"gray\"\n      variant=\"outline\"\n      radius={8}\n      onClick={onClick}\n      {...rest}\n    >\n      {children}\n    </Button>\n  )\n}\n\nexport default GrayButton\n","import { createStyles } from '@mantine/core'\r\n\r\nconst padding = '7px'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  descriptionHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  title: {\r\n    color: theme.colors.gray[2],\r\n    fontFamily: theme.headings.fontFamily,\r\n    fontWeight: 600,\r\n    fontSize: '14px',\r\n    lineHeight: '15px',\r\n    margin: '0 6px'\r\n  },\r\n  button: {\r\n    marginLeft: '10px',\r\n    color: theme.colors.gray[6],\r\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\r\n    '&:hover': {\r\n      color: theme.colors.gray[0],\r\n      backgroundColor: theme.colors.gray[3]\r\n    }\r\n  },\r\n  textEditorArea: {\r\n    paddingTop: padding,\r\n    paddingBottom: padding\r\n  },\r\n  buttonsArea: {\r\n    paddingTop: padding,\r\n    paddingBottom: padding,\r\n    '& > *': {\r\n      marginRight: '10px'\r\n    }\r\n  },\r\n  rootTextEditor: {\r\n    borderRadius: '8px',\r\n    borderColor: theme.colors.gray[9]\r\n  },\r\n  toolbarInner: {\r\n    borderRadius: 'inherit',\r\n    margin: '0px'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { useState, useRef } from 'react'\r\nimport { Button, Text } from '@mantine/core'\r\nimport { getHotkeyHandler } from '@mantine/hooks'\r\nimport { RichTextEditor } from '@mantine/rte'\r\nimport { IoDocumentText, FaPen } from 'react-icons/all'\r\nimport GrayButton from '../GrayButton/GrayButton'\r\nimport useStyles from './style'\r\n\r\nconst Description = ({ initialText, onTextSavedHandler }) => {\r\n  const [text, setText] = useState(initialText)\r\n  const [isEditing, setEditing] = useState(false)\r\n  const refText = useRef(initialText)\r\n\r\n  const { classes } = useStyles()\r\n\r\n  const triggerEdit = () => {\r\n    setEditing(!isEditing)\r\n  }\r\n  const onCancelHandler = () => {\r\n    setText(refText.current)\r\n    triggerEdit()\r\n  }\r\n  const onSaveText = () => {\r\n    refText.current = text\r\n    triggerEdit()\r\n    onTextSavedHandler(text)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header className={classes.descriptionHeader}>\r\n        <IoDocumentText className={classes.title} />\r\n        <Text className={classes.title}>Description</Text>\r\n        {isEditing ? null : (\r\n          <GrayButton\r\n            className={classes.button}\r\n            radius={8}\r\n            leftIcon={<FaPen />}\r\n            onClick={triggerEdit}\r\n          >\r\n            Edit\r\n          </GrayButton>\r\n        )}\r\n      </header>\r\n      {isEditing ? (\r\n        <div className={classes.textEditorArea}>\r\n          <RichTextEditor\r\n            classNames={{\r\n              root: classes.rootTextEditor,\r\n              toolbar: classes.toolbarInner\r\n            }}\r\n            controls={[\r\n              ['bold', 'italic', 'underline', 'strike', 'clean'],\r\n              ['h1', 'h2', 'h3', 'h4'],\r\n              ['unorderedList', 'orderedList'],\r\n              ['link', 'blockquote', 'codeBlock'],\r\n              ['alignLeft', 'alignCenter', 'alignRight'],\r\n              ['sup', 'sub']\r\n            ]}\r\n            value={text}\r\n            onChange={setText}\r\n            onKeyDown={getHotkeyHandler([['shift+Enter', onSaveText]])}\r\n          />\r\n          <div className={classes.buttonsArea}>\r\n            <Button radius=\"md\" color=\"green\" onClick={onSaveText}>\r\n              Save\r\n            </Button>\r\n            <Button variant=\"subtle\" color=\"gray\" onClick={onCancelHandler}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={classes.textEditorArea}>\r\n          <RichTextEditor readOnly value={text} onChange={setText} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Description\r\n","const convertDate = (date: Date) => {\n  const newDate = date.toLocaleDateString('en-GB', {\n    timeZone: 'CET',\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  })\n  const dateSplitArray = newDate.split(' ')\n  const parsedDate = `${dateSplitArray[0]} ${dateSplitArray[1]}, ${dateSplitArray[2]}`\n  return parsedDate\n}\n\nexport default convertDate\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  divBody: {\n    display: 'flex'\n  },\n  imagePlaceholder: {\n    backgroundColor: theme.colors.gray[1],\n    fontFamily: 'Poppins',\n    fontWeight: '500',\n    textTransform: 'uppercase'\n  },\n  divInfo: {\n    marginLeft: '15px',\n    fontWeight: '500',\n    fontSize: '12px',\n    lineHeight: '15px'\n  },\n  date: {\n    fontSize: '10px',\n    lineHeight: '12px',\n    fontFamily: 'Poppins',\n    color: theme.colors.gray[4]\n  },\n  title: {\n    fontFamily: 'Poppins',\n    fontSize: '12px',\n    marginBottom: '5px',\n    fontWeight: '500'\n  },\n  buttonDelete: {\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n    '&:hover': {\n      backgroundColor: theme.colors.red[8],\n      color: theme.colors.red[0]\n    }\n  },\n  buttonDownload: {\n    marginRight: '10px',\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n    '&:hover': {\n      backgroundColor: theme.colors.green[7],\n      color: theme.colors.green[0]\n    }\n  }\n}))\n\nexport default useStyles\n","import { Image, Text } from '@mantine/core'\nimport GrayButton from '../GrayButton/GrayButton'\nimport convertDate from '../../utils/convertDate'\nimport useStyles from './style'\n\nexport type AttachmentType = {\n  itemUrl?: string\n  date: Date\n  fileName: string\n  id: string\n}\n\ntype AttachmentProps = AttachmentType & {\n  onDeleteHandler: (id: string) => void\n}\n\nconst Attachment = ({ itemUrl, date, fileName, id, onDeleteHandler }: AttachmentProps) => {\n  const { classes } = useStyles()\n\n  const attachmentDate = convertDate(date)\n  return (\n    <div className={classes.divBody}>\n      <div>\n        <Image\n          classNames={{ placeholder: classes.imagePlaceholder }}\n          src={itemUrl}\n          alt=\"Date\"\n          width={80}\n          height={55}\n          radius={8}\n          fit=\"cover\"\n          withPlaceholder\n          placeholder={<Text align=\"center\">{fileName[0] + (fileName[1] ? fileName[1] : '')}</Text>}\n        />\n      </div>\n      <div className={classes.divInfo}>\n        <Text className={classes.date}>{`Added ${attachmentDate}`}</Text>\n        <Text className={classes.title}>{fileName}</Text>\n        <GrayButton\n          component=\"a\"\n          href={itemUrl}\n          download\n          target=\"_blank\"\n          className={classes.buttonDownload}\n        >\n          Download\n        </GrayButton>\n        <GrayButton className={classes.buttonDelete} onClick={() => onDeleteHandler(id)}>\n          Delete\n        </GrayButton>\n      </div>\n    </div>\n  )\n}\nexport default Attachment\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  attachmentHeader: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  title: {\n    color: theme.colors.gray[2],\n    fontFamily: theme.headings.fontFamily,\n    fontWeight: 600,\n    fontSize: '14px',\n    lineHeight: '15px',\n    margin: '0 6px'\n  },\n  grayBtn: {\n    marginLeft: '10px',\n    color: theme.colors.gray[6],\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n    '&:hover': {\n      color: theme.colors.gray[0],\n      backgroundColor: theme.colors.gray[3]\n    }\n  },\n  attachmentSection: {\n    padding: '10px 0px'\n  }\n}))\nexport default useStyles\n","import { Text } from '@mantine/core'\nimport { FC } from 'react'\nimport { IoDocumentText } from 'react-icons/io5'\nimport { MdAdd } from 'react-icons/md'\nimport Attachment, { AttachmentType } from '../Attachment/Attachment'\nimport GrayButton from '../GrayButton/GrayButton'\nimport useStyles from './style'\n\nexport type AttachmentsListProps = {\n  attachments: AttachmentType[]\n  onAddHandler: (e?: React.MouseEvent<HTMLElement>) => void\n  onDeleteHandler: (id: string) => void\n}\n\nconst AttachmentsList: FC<AttachmentsListProps> = ({\n  attachments,\n  onAddHandler,\n  onDeleteHandler\n}) => {\n  const { classes } = useStyles()\n  return (\n    <>\n      <header className={classes.attachmentHeader}>\n        <IoDocumentText className={classes.title} />\n        <Text className={classes.title}>Attachments</Text>\n        <GrayButton\n          leftIcon={<MdAdd size={22} />}\n          onClick={onAddHandler}\n          className={classes.grayBtn}\n          radius={8}\n        >\n          Add\n        </GrayButton>\n      </header>\n      {attachments.map(({ fileName, date, itemUrl, id }) => (\n        <section className={classes.attachmentSection} key={id}>\n          <Attachment\n            fileName={fileName}\n            date={date}\n            itemUrl={itemUrl}\n            id={id}\n            onDeleteHandler={onDeleteHandler}\n          />\n        </section>\n      ))}\n    </>\n  )\n}\nexport default AttachmentsList\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  divUserInfo: {\r\n    display: 'flex',\r\n    paddingTop: '5px',\r\n    marginBottom: '15px',\r\n    '& > *': {\r\n      marginRight: '14px'\r\n    }\r\n  },\r\n  divComment: {\r\n    marginBottom: '20px'\r\n  },\r\n  name: {\r\n    fontFamily: theme.other.secondaryFont,\r\n    fontSize: '12px',\r\n    fontWeight: '500'\r\n  },\r\n  date: {\r\n    fontSize: '10px',\r\n    color: theme.colors.gray[2]\r\n  },\r\n  divButtons: {\r\n    marginLeft: 'auto',\r\n    color: theme.colors.gray[9],\r\n    marginBottom: 'auto'\r\n  },\r\n  buttonSubtle: {\r\n    color: theme.colors.gray[9],\r\n    fontFamily: theme.other.secondaryFont,\r\n    fontSize: '10px',\r\n    fontWeight: '400',\r\n    '&: hover': {\r\n      backgroundColor: theme.colors.gray[0]\r\n    }\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { Button } from '@mantine/core'\r\nimport useStyles from './style'\r\n\r\nconst ButtonComment = ({ onClickEvent, children }) => {\r\n  const { classes } = useStyles()\r\n  return (\r\n    <Button\r\n      onClick={onClickEvent}\r\n      classNames={{ subtle: classes.buttonSubtle }}\r\n      variant=\"subtle\"\r\n      size=\"xs\"\r\n      compact\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\nexport default ButtonComment\r\n","import { useState } from 'react'\r\nimport { Avatar, Container, Textarea } from '@mantine/core'\r\nimport { getHotkeyHandler } from '@mantine/hooks'\r\nimport useStyles from './style'\r\nimport ButtonComment from './ButtonComment'\r\n\r\nconst Comment = ({ id, userData, textContent, date, onDeleteHandler, onEditHandler }) => {\r\n  const { classes } = useStyles()\r\n  const [editability, setEditability] = useState(true)\r\n  const [currentContent, setCurrentContent] = useState(textContent)\r\n\r\n  const newDate = date.toLocaleDateString('pl-PL', {\r\n    timeZone: 'CET',\r\n    month: 'long',\r\n    day: '2-digit',\r\n    year: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric'\r\n  })\r\n  return (\r\n    <Container>\r\n      <div className={classes.divUserInfo}>\r\n        <Avatar radius=\"md\" src={userData.profilePictureURL} />\r\n\r\n        <div>\r\n          <div className={classes.name}>{userData.username}</div>\r\n          <div className={classes.date}>{newDate}</div>\r\n        </div>\r\n\r\n        {editability ? (\r\n          <div className={classes.divButtons}>\r\n            <ButtonComment onClickEvent={() => setEditability(false)}>Edit</ButtonComment>\r\n            <span>-</span>\r\n            <ButtonComment onClickEvent={() => onDeleteHandler(id)}>Delete</ButtonComment>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.divButtons}>\r\n            <ButtonComment\r\n              onClickEvent={() => {\r\n                setEditability(true)\r\n                onEditHandler(id, currentContent)\r\n              }}\r\n            >\r\n              Save\r\n            </ButtonComment>\r\n            <span>-</span>\r\n            <ButtonComment onClickEvent={() => setEditability(true)}>Cancel</ButtonComment>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {editability ? (\r\n        <div className={classes.divComment}>{currentContent}</div>\r\n      ) : (\r\n        <div className={classes.divComment}>\r\n          <Textarea\r\n            defaultValue={currentContent}\r\n            onChange={(e) => {\r\n              setCurrentContent(e.target.value)\r\n            }}\r\n            onKeyDown={getHotkeyHandler([\r\n              [\r\n                'shift+Enter',\r\n                () => {\r\n                  setEditability(true)\r\n                  onEditHandler(id, currentContent)\r\n                }\r\n              ]\r\n            ])}\r\n          />\r\n        </div>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  commentMain: {\n    border: '1px solid',\n    borderColor: theme.colors.gray[2],\n    borderRadius: theme.radius.md,\n    padding: 4,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  button: { alignSelf: 'end' }\n}))\n\nexport default useStyles\n","import { Button, Textarea } from '@mantine/core'\nimport { getHotkeyHandler } from '@mantine/hooks'\nimport useStyles from './style'\n\nconst CommentInput = ({ onValueChangedHandler, onSubmitHandler, value }) => {\n  const { classes } = useStyles()\n\n  return (\n    <div className={classes.commentMain}>\n      <Textarea\n        placeholder=\"Write a comment ...\"\n        variant=\"unstyled\"\n        size=\"md\"\n        onChange={(event) => onValueChangedHandler(event.target.value)}\n        value={value}\n        onKeyDown={getHotkeyHandler([['shift+Enter', onSubmitHandler]])}\n      />\n      <Button compact className={classes.button} onClick={onSubmitHandler}>\n        Save\n      </Button>\n    </div>\n  )\n}\nexport default CommentInput\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  outline: {\n    borderColor: theme.colors.gray[1],\n    borderRadius: 12,\n    padding: '5px'\n  },\n  searchBar: {\n    border: 'solid black 1px'\n  },\n  photoSearchText: {\n    fontWeight: 600,\n    fontFamily: theme.other.secondaryFont,\n    color: theme.colors.gray[8]\n  },\n  photoUnsplashText: {\n    color: theme.colors.gray[6],\n    marginBottom: 10\n  },\n  imageResults: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    '& > *': {\n      margin: 5\n    }\n  }\n}))\n\nexport default useStyles\n","import { ActionIcon } from '@mantine/core'\nimport { BiSearchAlt2 } from 'react-icons/bi'\n\nconst ActionIconSearch = () => (\n  <ActionIcon variant=\"filled\" color=\"blue\" radius=\"md\" size=\"sm\">\n    <BiSearchAlt2 />\n  </ActionIcon>\n)\n\nexport default ActionIconSearch\n","import { Button } from '@mantine/core'\n\nconst SearchButton = () => (\n  <Button variant=\"filled\" color=\"blue\" radius=\"md\" size=\"sm\">\n    Search\n  </Button>\n)\n\nexport default SearchButton\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  input: {\n    borderWidth: 0\n  },\n  wrapper: {\n    height: '34px',\n    boxShadow: '0px 4px 12px 0px #0000001A'\n  },\n  buttonRightSection: {\n    width: 83,\n    margin: '2px 2px 2px 0',\n\n    '& button': {\n      height: '34px'\n    }\n  }\n}))\n\nexport default useStyles\n","import type { ElementType, ChangeEvent } from 'react'\nimport { Input, InputProps } from '@mantine/core'\n\nimport ActionIconSearch from './ActionIconSearch'\nimport SearchButton from './SearchButton'\nimport useStyles from './styles'\n\nexport type SearchBarProps = InputProps<ElementType> & {\n  onKeywordChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\n  actionType: 'button' | 'icon'\n}\n\nconst SearchBar = ({\n  radius = 'md',\n  size = 'xs',\n  placeholder = 'Keywords...',\n  onKeywordChangeHandler,\n  actionType,\n  ...restProps\n}: SearchBarProps) => {\n  const { classes } = useStyles()\n\n  return (\n    <Input\n      classNames={{\n        input: classes.input,\n        wrapper: classes.wrapper,\n        rightSection: actionType === 'button' ? classes.buttonRightSection : ''\n      }}\n      radius={radius}\n      size={size}\n      placeholder={placeholder}\n      rightSection={actionType === 'icon' ? <ActionIconSearch /> : <SearchButton />}\n      onChange={onKeywordChangeHandler}\n      {...restProps}\n    />\n  )\n}\n\nexport default SearchBar\n","import { Avatar, Input, Text } from '@mantine/core'\nimport { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport useStyles from './style'\nimport { IMAGE_API_PROVIDER_URL, IMAGE_API_IMAGES_PER_PAGE } from '../../config'\nimport { debounce } from '../../utils/functions'\nimport SearchBar from '../SearchBar/SearchBar'\n\nexport const pickerImagesSizes = {\n  full: 'full',\n  raw: 'raw',\n  regular: 'regular',\n  small: 'small',\n  thumb: 'thumb'\n}\n\nconst ImagePicker = ({ imageSize, onImageSelectedHandler }) => {\n  const { classes } = useStyles()\n  const [images, setImages] = useState([])\n\n  const getPhotos = (event) => {\n    const { value } = event.target\n    fetch(\n      `${IMAGE_API_PROVIDER_URL}?client_id=${process.env.REACT_APP_UNSPLASH_API_KEY}&query=${value}&per_page=${IMAGE_API_IMAGES_PER_PAGE}`\n    )\n      .then((res) => res.json())\n      .then((json) => setImages(json.results))\n      // eslint-disable-next-line no-console\n      .catch((err) => console.error(err))\n  }\n  const onKeywordChangeHandler = debounce(getPhotos)\n\n  return (\n    <div className={classes.outline}>\n      <Text size=\"sm\">Photo Search</Text>\n      <Text className={classes.photoUnsplashText} size=\"sm\">\n        Search unsplash for photos\n      </Text>\n      <SearchBar onKeywordChangeHandler={onKeywordChangeHandler} actionType=\"button\" />\n      <div className={classes.imageResults}>\n        {images.map((imageLink) => (\n          <Avatar\n            key={imageLink.id}\n            radius=\"md\"\n            size=\"lg\"\n            src={imageLink.urls.thumb}\n            onClick={() => onImageSelectedHandler(imageLink.urls[imageSize])}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nImagePicker.propTypes = {\n  imageSize: PropTypes.oneOf(Object.values(pickerImagesSizes)),\n  onImageSelectedHandler: PropTypes.func\n}\nexport default ImagePicker\n","export const debounce = (func) => {\n  let timer\n  return (args) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => func(args), 300)\n  }\n}\n","export const IMAGE_API_PROVIDER_URL = 'https://api.unsplash.com/search/photos/'\nexport const IMAGE_API_IMAGES_PER_PAGE = 12\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  RedButton: {\n    color: theme.colors.red[6],\n    fontFamily: theme.headings.fontFamily,\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n    '&:hover': {\n      color: '#FFF',\n      backgroundColor: theme.fn.darken(theme.colors.red[6], 0.1)\n    },\n    padding: '0 clamp(2px, 1vw, 18px)'\n  },\n  title: {\n    color: theme.colors.gray[2],\n    fontFamily: 'Poppins',\n    fontWeight: 600,\n    fontSize: '16px',\n    lineHeight: '15px',\n    margin: '0 10px'\n  }\n}))\n\nexport default useStyles\n","import { Button } from '@mantine/core'\nimport useStyles from './style'\n\ntype RedButtonProps = {\n  children?: string\n  onClick: (e?: React.MouseEvent<HTMLElement>) => void\n  rightIcon?: React.ReactNode\n}\n\nconst RedButton = ({ children, onClick, rightIcon }: RedButtonProps) => {\n  const { classes } = useStyles()\n  return (\n    <Button\n      radius=\"md\"\n      onClick={onClick}\n      variant=\"outline\"\n      color=\"red\"\n      rightIcon={rightIcon}\n      className={classes.RedButton}\n    >\n      {children}\n    </Button>\n  )\n}\nexport default RedButton\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  membersListHeader: {\n    display: 'flex'\n  },\n  title: {\n    color: theme.colors.gray[2],\n    fontFamily: theme.headings.fontFamily,\n    fontWeight: 600,\n    fontSize: '14px',\n    lineHeight: '15px',\n    margin: '0 6px'\n  },\n  memberSection: {\n    display: 'grid',\n    alignItems: 'center',\n    gridTemplateColumns: '38px 5fr 2fr',\n    padding: '5px'\n  },\n  username: {\n    fontFamily: theme.headings.fontFamily,\n    fontWeight: 600,\n    color: theme.colors.gray[9],\n    width: '100%',\n    margin: '0 10px'\n  },\n  admin: {\n    textAlign: 'center',\n    color: theme.colors.gray[6],\n    fontWeight: 600\n  }\n}))\nexport default useStyles\n","import { Text } from '@mantine/core'\nimport { HiUsers } from 'react-icons/hi'\nimport UserIcon from '../UserIcon/UserIcon'\nimport RedButton from '../RedButton/RedButton'\nimport useStyles from './style'\nimport { RandomUserType } from '../../logic/randomUser'\n\ntype MembersListProps = {\n  title?: string\n  membersList: RandomUserType[]\n  onDeleteHandler: (id: string) => void\n  isDeletable?: boolean\n}\n\nconst MembersList = ({ membersList, onDeleteHandler, isDeletable, title }: MembersListProps) => {\n  const { classes } = useStyles()\n  function showButtons(role: string | undefined, id: string) {\n    if (isDeletable) {\n      if (role === 'Admin') {\n        return <Text className={classes.admin}>Admin</Text>\n      }\n      return <RedButton onClick={() => onDeleteHandler(id)}>Remove</RedButton>\n    }\n    return undefined\n  }\n  return (\n    <div>\n      <header className={classes.membersListHeader}>\n        <HiUsers className={classes.title} />\n        <Text className={classes.title}>{title || 'Members'}</Text>\n      </header>\n      <section>\n        {membersList.map(({ username, id, profilePictureURL, role }) => (\n          <section className={classes.memberSection} key={id}>\n            <UserIcon imgUrl={profilePictureURL} username={username} />\n            <Text className={classes.username}>{username}</Text>\n            {showButtons(role, id)}\n          </section>\n        ))}\n      </section>\n    </div>\n  )\n}\nexport default MembersList\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  memberCard: {\n    borderRadius: '12px',\n    padding: '10px',\n    width: '300px',\n    borderColor: theme.colors.gray[1],\n    boxShadow: '0px 2px 4px #0000000F'\n  },\n  memberCardTitle: {\n    fontWeight: 600,\n    color: theme.colors.gray[9]\n  },\n  memberCardDescription: {\n    marginBottom: '10px',\n    color: theme.colors.gray[2]\n  },\n  memberCardInput: {\n    filter: 'drop-shadow(0px 4px 12px rgba(0, 0, 0, 0.1))'\n  },\n  usersContainer: {\n    borderRadius: '12px',\n    border: `1px solid ${theme.colors.gray[1]}`,\n    margin: '10px 0',\n    filter: 'drop-shadow(0px 4px 12px rgba(0, 0, 0, 0.1))',\n    overflow: 'hidden'\n  },\n  memberContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '8px',\n    width: '100%',\n    transition: 'all 0.2s ease-in-out',\n    '&:hover': {\n      backgroundColor: theme.colors.gray[1]\n    }\n  },\n  user: {\n    marginLeft: '6px',\n    color: theme.colors.gray[9]\n  },\n  selectedUser: {\n    backgroundColor: theme.colors.blue[4],\n    '&:hover': {\n      backgroundColor: theme.colors.blue[5]\n    }\n  },\n  icon: {\n    marginRight: '4px'\n  }\n}))\nexport default useStyles\n","import { useState } from 'react'\nimport { Button, Input, Text, ActionIcon, Center, UnstyledButton } from '@mantine/core'\nimport { AiOutlineSearch } from 'react-icons/ai'\nimport useStyles from './style'\nimport UserIcon from '../UserIcon/UserIcon'\nimport { RandomUserType } from '../../logic/randomUser'\n\ntype MemberCardContainerProps = {\n  membersList: RandomUserType[]\n  addUserHandler: (selectedUsers: string[]) => void\n}\n\nconst MemberCardContainer = ({ membersList, addUserHandler }: MemberCardContainerProps) => {\n  const { classes } = useStyles()\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([])\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value)\n  }\n  const results = !searchTerm\n    ? membersList\n    : membersList.filter(({ username }) =>\n        username.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n  function handleMemberClick(id: string) {\n    const index = selectedUsers.indexOf(id)\n    if (index > -1) {\n      setSelectedUsers((prevSelectedUsers) =>\n        prevSelectedUsers.filter((prevUserId) => prevUserId !== id)\n      )\n    } else {\n      setSelectedUsers((prevSelectedUsers) => [...prevSelectedUsers, id])\n    }\n  }\n  return (\n    <div className={classes.memberCard}>\n      <Text className={classes.memberCardTitle}>Members</Text>\n      <Text className={classes.memberCardDescription}>Assign members to this card</Text>\n      <Input\n        className={classes.memberCardInput}\n        placeholder=\"User...\"\n        radius=\"md\"\n        rightSectionWidth={30}\n        value={searchTerm}\n        onChange={handleChange}\n        rightSection={\n          <ActionIcon radius=\"md\" variant=\"filled\" color=\"blue\" className={classes.icon}>\n            <AiOutlineSearch />\n          </ActionIcon>\n        }\n      />\n      <section className={classes.usersContainer}>\n        {results.slice(0, 4).map(({ username, profilePictureURL, id }) => (\n          <UnstyledButton\n            className={\n              selectedUsers.indexOf(id) + 1\n                ? `${classes.memberContainer} ${classes.selectedUser}`\n                : classes.memberContainer\n            }\n            key={id}\n            onClick={() => handleMemberClick(id)}\n          >\n            <UserIcon imgUrl={profilePictureURL} username={username} />\n            <Text className={classes.user} weight={600}>\n              {username}\n            </Text>\n          </UnstyledButton>\n        ))}\n      </section>\n      <Center>\n        <Button\n          radius=\"md\"\n          onClick={() => {\n            addUserHandler(selectedUsers)\n            setSelectedUsers([])\n          }}\n        >\n          Invite\n        </Button>\n      </Center>\n    </div>\n  )\n}\nexport default MemberCardContainer\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.colors.gray[0],\n    color: theme.colors.gray[6],\n    fontSize: '14px',\n    lineHeight: '18px',\n    maxWidth: '100%',\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n    '&:hover': {\n      color: '#FFF',\n      backgroundColor: theme.fn.darken(theme.colors.gray[0], 0.2)\n    }\n  },\n  inner: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-start'\n  }\n}))\n\nexport default useStyles\n","import { Button } from '@mantine/core'\nimport useStyles from './style'\n\ntype GrayButtonFilledProps = {\n  children?: string\n  onClick: (e?: React.MouseEvent<HTMLElement>) => void\n  rightIcon?: React.ReactNode\n  leftIcon?: React.ReactNode\n}\n\nconst GrayButtonFilled = ({ children, onClick, rightIcon, leftIcon }: GrayButtonFilledProps) => {\n  const { classes } = useStyles()\n  return (\n    <Button\n      radius=\"md\"\n      onClick={onClick}\n      leftIcon={leftIcon}\n      classNames={{ root: classes.root, inner: classes.inner }}\n      rightIcon={rightIcon}\n    >\n      {children}\n    </Button>\n  )\n}\nexport default GrayButtonFilled\n","import faker from '@faker-js/faker'\n\nexport type GenerateAttachmentType = {\n  fileName: string\n\n  itemUrl: string\n\n  date: Date\n\n  id: string\n}\n\nclass GenerateAttachment {\n  private fileName!: string\n\n  private itemUrl!: string\n\n  private date: Date\n\n  private id: string\n\n  constructor() {\n    this.generateAttachment()\n    this.date = faker.date.past()\n    this.id = faker.datatype.uuid()\n  }\n\n  get getAttachment() {\n    return {\n      fileName: this.fileName,\n      itemUrl: this.itemUrl,\n      date: this.date,\n      id: this.id\n    }\n  }\n\n  private generateAttachment() {\n    const isAttachmentWithImage = Math.random() > 0.5\n    if (isAttachmentWithImage) {\n      this.fileName = faker.system.commonFileName('jpg')\n      this.itemUrl = `https://picsum.photos/seed/${this.fileName}/300/200`\n    } else {\n      const url = faker.internet.url()\n      this.fileName = faker.system.fileName()\n      this.itemUrl = `${url}/${this.fileName}`\n    }\n  }\n}\n\nexport default GenerateAttachment\n","import faker from '@faker-js/faker'\n\nexport type RandomUserType = {\n  id: string\n\n  username: string\n\n  role: string\n\n  profilePictureURL: string\n}\n\nclass RandomUser {\n  private readonly id: string\n\n  private readonly username: string\n\n  private readonly role: string\n\n  private readonly profilePictureURL: string\n\n  constructor() {\n    this.username = `${faker.name.firstName()} ${faker.name.lastName()}`\n    this.id = faker.datatype.uuid()\n    this.role = RandomUser.generateRole()\n    this.profilePictureURL = `https://avatars.dicebear.com/api/human/${this.id}.svg`\n  }\n\n  get userData() {\n    return {\n      username: this.username,\n      id: this.id,\n      role: this.role,\n      profilePictureURL: this.profilePictureURL\n    }\n  }\n\n  private static generateRole() {\n    const num = parseInt(String(Math.random() * 10), 10)\n    if (num === 5) {\n      return 'Admin'\n    }\n    return 'User'\n  }\n}\n\nexport default RandomUser\n","import faker from '@faker-js/faker'\nimport RandomUser, { RandomUserType } from './randomUser'\n\nexport type GenerateCommentType = {\n  id: string\n\n  userData: RandomUserType\n\n  textContent: string\n\n  date: Date\n}\n\nclass GenerateComment {\n  private readonly id: string\n\n  private readonly userData: RandomUserType\n\n  private readonly textContent: string\n\n  private readonly date: Date\n\n  constructor() {\n    this.id = faker.datatype.uuid()\n    this.userData = new RandomUser().userData\n    this.textContent = faker.lorem.lines(3)\n    this.date = faker.date.past()\n  }\n\n  get getComment() {\n    return {\n      id: this.id,\n      userData: this.userData,\n      textContent: this.textContent,\n      date: this.date\n    }\n  }\n}\nexport default GenerateComment\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  modal: {\n    padding: 20\n  },\n  modalTitle: {\n    margin: 0\n  },\n  container: {\n    display: 'grid',\n    gridTemplateColumns: '7fr 3fr',\n    gridGap: '2em'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    width: 32,\n    height: 32,\n    padding: 0,\n    color: 'white',\n    backgroundColor: '#1a64db',\n    '&:hover': {\n      backgroundColor: theme.colors.red[6]\n    }\n  },\n  column: {\n    width: '100%'\n  },\n  sidebar: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '1em',\n    width: '100%'\n  },\n  sidebarHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '5px'\n  },\n  sectionTitle: {\n    color: theme.colors.gray[2],\n    fontFamily: theme.headings.fontFamily,\n    fontWeight: 600,\n    fontSize: '14px',\n    lineHeight: '15px',\n    margin: '0 6px'\n  },\n  actionSection: {\n    marginTop: 2,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  title: {\n    fontSize: '18px'\n  },\n  coverImage: {\n    height: 130,\n    width: '100%',\n    objectFit: 'cover',\n    borderRadius: 20,\n    marginBottom: 10\n  },\n  popTarget: {\n    width: '100%'\n  },\n  cont: {\n    height: '100vh'\n  }\n}))\n\nexport default useStyles\n","import { useState } from 'react'\nimport { Popover, Modal, Text } from '@mantine/core'\nimport { AiOutlinePlus, IoMdContact, MdImage } from 'react-icons/all'\n\n// Components\nimport Description from '../Description/Description'\nimport AttachmentsList from '../AttachmentsList/AttachmentsList'\nimport Comment from '../Comment/Comment'\nimport CommentInput from '../CommentInput/CommentInput'\nimport ImagePicker, { pickerImagesSizes } from '../ImagePicker/ImagePicker'\nimport MembersList from '../MembersList/MembersList'\nimport MemberCardContainer from '../MemberCardContainer/MemberCardContainer'\nimport BlueBtn from '../BlueBtn/BlueBtn'\nimport GrayButtonFilled from '../GrayButtonFilled/GrayButtonFilled'\n\n// Logic\nimport GenerateAttachment, { GenerateAttachmentType } from '../../logic/generateAttachment'\nimport GenerateComment, { GenerateCommentType } from '../../logic/generateComment'\nimport { RandomUserType } from '../../logic/randomUser'\nimport { GenerateTaskType } from '../../logic/generateTask'\n\nimport useStyles from './style'\n\ntype TaskModalProps = {\n  isOpen: boolean\n  task: GenerateTaskType\n  membersList: RandomUserType[]\n  commentsList: GenerateCommentType[]\n  onCloseHandler: (task: GenerateTaskType & { comments: GenerateCommentType[] }) => void\n}\n\nconst TaskModal = ({ isOpen, task, commentsList, membersList, onCloseHandler }: TaskModalProps) => {\n  const { classes } = useStyles()\n  const [currentDescription, setCurrentDescription] = useState(task.description)\n  const [currentAttachments, setCurrentAttachments] = useState(task.attachment)\n  const [currentCoverImageURL, setCurrentCoverImageURL] = useState(task.imageCoverURL)\n  const [currentAssigneesList, setCurrentAssigneesList] = useState(task.assigneeList)\n  const [currentComments, setCurrentComments] = useState(commentsList)\n  const [currentInputComment, setCurrentInputComment] = useState('')\n  const [visibleImagePicker, setVisibleImagePicker] = useState(false)\n  const [visibleMemberList, setVisibleMemberList] = useState(false)\n  const [currentMemberList, setCurrentMemberList] = useState(membersList)\n\n  const attachmentOnAddHandler = () => {\n    const newAttachment: GenerateAttachmentType = new GenerateAttachment().getAttachment\n    setCurrentAttachments((prevState: GenerateAttachmentType[]) => [...prevState, newAttachment])\n  }\n\n  const attachmentOnDeleteHandler = (deleteId: string) => {\n    setCurrentAttachments((prevCurrentAttachments) =>\n      prevCurrentAttachments.filter(({ id }) => id !== deleteId)\n    )\n  }\n\n  const commentOnDeleteHandler = (deleteId: string) => {\n    setCurrentComments((prevCurrentComments) =>\n      prevCurrentComments.filter(({ id }) => id !== deleteId)\n    )\n  }\n\n  const onCloseModalWindowHandler = () => {\n    onCloseHandler({\n      id: task.id,\n      imageCoverURL: currentCoverImageURL,\n      title: task.title,\n      description: currentDescription,\n      attachment: currentAttachments,\n      assigneeList: currentAssigneesList,\n      comments: currentComments\n    })\n  }\n\n  const handleCommentEdit = (editedId: string, editedText: string) => {\n    const editedCommentIndex = currentComments.findIndex(({ id }) => id === editedId)\n    if (editedCommentIndex !== -1) {\n      const newComments = [...currentComments]\n      newComments[editedCommentIndex] = {\n        ...newComments[editedCommentIndex],\n        textContent: editedText\n      }\n      setCurrentComments(newComments)\n    }\n  }\n\n  const onSubmitCommentInputHandler = () => {\n    if (currentInputComment !== '') {\n      const fakeComment = new GenerateComment().getComment\n      fakeComment.textContent = currentInputComment\n      fakeComment.date = new Date()\n      setCurrentComments((prevState) => [...prevState, fakeComment])\n      setCurrentInputComment('')\n    }\n  }\n\n  const onImagePickerHandler = (val: string) => {\n    setCurrentCoverImageURL(val)\n  }\n\n  const addUserHandler = (selectedUsersID: string[]) => {\n    const newAssignees = selectedUsersID\n      .map((selectedUserID) => currentMemberList.find(({ id }) => id === selectedUserID))\n      .filter((assignee) => assignee) as RandomUserType[]\n    setCurrentAssigneesList((prevState) => [...prevState, ...newAssignees])\n    setCurrentMemberList((prevState) =>\n      prevState.filter((member) => !selectedUsersID.some((selectedId) => selectedId === member.id))\n    )\n  }\n\n  const onAssigneesListDeleteHandler = (deletedID: string) => {\n    const editedCommentIndex = currentAssigneesList.findIndex(({ id }) => id === deletedID)\n    if (editedCommentIndex !== -1) {\n      const newAssigneesList = [...currentAssigneesList]\n      newAssigneesList.splice(editedCommentIndex, 1)\n      setCurrentAssigneesList(newAssigneesList)\n    }\n  }\n\n  return (\n    <Modal\n      className={classes.modal}\n      classNames={{ close: classes.closeButton, header: classes.modalTitle }}\n      opened={isOpen}\n      onClose={onCloseModalWindowHandler}\n      centered\n      overflow=\"inside\"\n      size=\"clamp(1000px, 70%, 2000px)\"\n    >\n      {currentCoverImageURL ? (\n        <img src={currentCoverImageURL} className={classes.coverImage} alt=\"Cover\" />\n      ) : null}\n      <section className={classes.container}>\n        <div className={classes.column}>\n          <Text className={classes.title}>{task.title}</Text>\n          <Description\n            initialText={currentDescription}\n            onTextSavedHandler={(descriptionText: string) => setCurrentDescription(descriptionText)}\n          />\n          <AttachmentsList\n            attachments={currentAttachments}\n            onAddHandler={attachmentOnAddHandler}\n            onDeleteHandler={attachmentOnDeleteHandler}\n          />\n          <CommentInput\n            onValueChangedHandler={setCurrentInputComment}\n            onSubmitHandler={onSubmitCommentInputHandler}\n            value={currentInputComment}\n          />\n          {currentComments.map(({ textContent, date, userData, id }) => (\n            <Comment\n              textContent={textContent}\n              date={date}\n              userData={userData}\n              id={id}\n              key={id}\n              onDeleteHandler={commentOnDeleteHandler}\n              onEditHandler={handleCommentEdit}\n            />\n          ))}\n        </div>\n        <div className={classes.sidebar}>\n          <section className={classes.actionSection}>\n            <header className={classes.sidebarHeader}>\n              <IoMdContact className={classes.sectionTitle} />\n              <Text className={classes.sectionTitle}>Actions</Text>\n            </header>\n            <Popover\n              opened={visibleImagePicker}\n              onClose={() => setVisibleImagePicker(false)}\n              target={\n                <GrayButtonFilled\n                  onClick={() => setVisibleImagePicker((prevState: boolean) => !prevState)}\n                  leftIcon={<MdImage />}\n                >\n                  Cover\n                </GrayButtonFilled>\n              }\n              position=\"bottom\"\n              placement=\"start\"\n              width={300}\n              spacing={0}\n              radius=\"md\"\n              classNames={{ target: classes.popTarget }}\n            >\n              <ImagePicker\n                imageSize={pickerImagesSizes.regular}\n                onImageSelectedHandler={onImagePickerHandler}\n              />\n            </Popover>\n          </section>\n          <MembersList\n            membersList={currentAssigneesList}\n            onDeleteHandler={onAssigneesListDeleteHandler}\n            isDeletable\n          />\n          <Popover\n            opened={visibleMemberList}\n            onClose={() => setVisibleMemberList(false)}\n            target={\n              <BlueBtn\n                onClick={() => setVisibleMemberList((prevState: boolean) => !prevState)}\n                rightIcon={<AiOutlinePlus />}\n              >\n                Assign a member\n              </BlueBtn>\n            }\n            position=\"bottom\"\n            placement=\"start\"\n            width={300}\n            spacing={0}\n            radius=\"md\"\n          >\n            <MemberCardContainer membersList={currentMemberList} addUserHandler={addUserHandler} />\n          </Popover>\n        </div>\n      </section>\n    </Modal>\n  )\n}\n\nexport default TaskModal\n","import faker from '@faker-js/faker'\n\nclass GenerateId {\n  private id: string\n\n  constructor() {\n    this.id = faker.datatype.uuid()\n  }\n\n  get getId() {\n    return this.id\n  }\n}\n\nexport default GenerateId\n","class GenerateImage {\n  private image: string\n\n  constructor(id: string) {\n    this.image = `https://picsum.photos/seed/${id}/300/200`\n  }\n\n  get getImage() {\n    return this.image\n  }\n}\n\nexport default GenerateImage\n","import faker from '@faker-js/faker'\nimport GenerateAttachment, { GenerateAttachmentType } from './generateAttachment'\nimport { RandomUserType } from './randomUser'\nimport GenerateId from './generateId'\nimport GenerateImage from './generateImage'\n\nexport type GenerateTaskType = {\n  id: string\n  imageCoverURL: string | null\n  title: string\n  description: string\n  attachment: GenerateAttachmentType[]\n  assigneeList: RandomUserType[]\n}\n\nclass GenerateTask {\n  private id: string\n\n  private imageCoverURL: string | null\n\n  private listOfUsers: RandomUserType[]\n\n  private title: string\n\n  private description: string\n\n  private attachment: GenerateAttachmentType[]\n\n  private assigneeList: RandomUserType[]\n\n  constructor(ListOfUsers: RandomUserType[]) {\n    this.id = new GenerateId().getId\n    this.listOfUsers = ListOfUsers\n    this.title = faker.lorem.sentence()\n    this.description = faker.lorem.paragraph()\n    this.attachment = [new GenerateAttachment().getAttachment]\n    this.assigneeList = this.getAssigneeList()\n    this.imageCoverURL = this.getImageCover()\n  }\n\n  private getAssigneeList() {\n    const randomList = faker.helpers.shuffle(this.listOfUsers)\n    const numberOfAssignee = Math.floor(Math.random() * (this.listOfUsers.length - 1)) + 1\n    const assigneeList = []\n    for (let i = 0; i < numberOfAssignee; i += 1) {\n      assigneeList.push(randomList[i])\n    }\n    return assigneeList\n  }\n\n  private getImageCover() {\n    const isImageCover = Math.random() > 0.5\n    if (isImageCover) {\n      return new GenerateImage(this.id).getImage\n    }\n    return null\n  }\n\n  get taskData() {\n    return {\n      id: this.id,\n      title: this.title,\n      description: this.description,\n      attachment: this.attachment,\n      assigneeList: this.assigneeList,\n      imageCoverURL: this.imageCoverURL\n    }\n  }\n}\n\nexport default GenerateTask\n","import faker from '@faker-js/faker'\nimport GenerateTask from './generateTask'\nimport RandomUser from './randomUser'\n\nlet listOfUsers = new Array(10).fill(0).map(() => new RandomUser().userData)\n\nconst normalUsers = listOfUsers.filter((user) => user.role !== 'Admin')\nconst admins = listOfUsers.filter((user) => user.role === 'Admin')\n\nif (admins.length === 0) {\n  listOfUsers[0].role = 'Admin'\n} else {\n  listOfUsers = [...normalUsers, admins[0]]\n}\n\nconst PP = () => {\n  if (Math.random() > 0.5) {\n    return 'Private'\n  }\n  return 'Public'\n}\n\nconst GenerateBoard = {\n  columns: [\n    {\n      id: '11',\n      title: 'Backlog',\n      tasks: [new GenerateTask(listOfUsers).taskData, new GenerateTask(listOfUsers).taskData]\n    },\n    {\n      id: '2',\n      title: 'To do',\n      tasks: [new GenerateTask(listOfUsers).taskData]\n    },\n    {\n      id: '3',\n      title: 'In progress',\n      tasks: [\n        new GenerateTask(listOfUsers).taskData,\n        new GenerateTask(listOfUsers).taskData,\n        new GenerateTask(listOfUsers).taskData\n      ]\n    },\n\n    {\n      id: '4',\n      title: 'Done',\n      tasks: [new GenerateTask(listOfUsers).taskData]\n    },\n    {\n      id: '5',\n      tasks: []\n    }\n  ],\n  users: listOfUsers,\n  status: PP(),\n  title: faker.lorem.sentence(4, 9),\n  description: faker.lorem.sentence(4, 9),\n  createdOn: faker.date.past()\n}\n\nexport default GenerateBoard\n","import React from 'react'\nimport GenerateBoard from '../logic/generateBoard'\nimport GenerateImage from '../logic/generateImage'\n\nexport type IDashboardsContext = [any[], (dashboards: any[]) => void]\n\nconst board1 = GenerateBoard\nconst board2 = GenerateBoard\nconst board3 = GenerateBoard\n\nexport const dashboardsDefaultValue = [\n  {\n    id: '1',\n    imageCoverUrl: new GenerateImage('1').getImage,\n    description: board1.description,\n    status: board1.status,\n    title: board1.title,\n    createdAt: board1.createdOn,\n    admin: 'userId',\n    columns: board1.columns,\n    users: board1.users\n  },\n  {\n    id: '2',\n    imageCoverUrl: new GenerateImage('2').getImage,\n    description: board2.description,\n    status: board2.status,\n    title: board2.title,\n    createdAt: board2.createdOn,\n    admin: 'userId',\n    columns: board2.columns,\n    users: board2.users\n  },\n  {\n    id: '3',\n    imageCoverUrl: new GenerateImage('3').getImage,\n    description: board3.description,\n    status: board3.status,\n    title: board3.title,\n    createdAt: board3.createdOn,\n    admin: 'userId',\n    columns: board3.columns,\n    users: board3.users\n  }\n]\n\nexport const DashboardsContext = React.createContext<IDashboardsContext>([\n  dashboardsDefaultValue,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  () => {}\n])\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  drawer: {\n    padding: '20px 5px 20px 20px'\n  },\n  drawerHeader: {\n    marginBottom: 4\n  },\n  authorHeader: {\n    display: 'flex'\n  },\n  authorSection: {\n    margin: '6px 0',\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    gap: 10\n  },\n  authorInfo: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontFamily: theme.headings.fontFamily,\n    fontWeight: 600,\n    color: theme.colors.gray[9],\n    fontSize: '14px',\n    margin: 0\n  },\n  title: {\n    color: theme.colors.gray[2],\n    fontFamily: theme.headings.fontFamily,\n    fontWeight: 600,\n    fontSize: '14px',\n    lineHeight: '15px',\n    margin: '0 6px'\n  },\n  date: {\n    color: theme.colors.gray[2],\n    fontFamily: theme.headings.fontFamily,\n    fontWeight: 600,\n    fontSize: '12px',\n    margin: 0\n  },\n  divider: {\n    marginBottom: 10\n  },\n  scrollArea: {\n    paddingRight: 15\n  }\n}))\n\nexport default useStyles\n","import { Drawer, Divider, Text, ScrollArea } from '@mantine/core'\nimport { FaUser } from 'react-icons/all'\n\n// Components\nimport Description from '../Description/Description'\nimport MembersList from '../MembersList/MembersList'\n\n// Logic\nimport { RandomUserType } from '../../logic/randomUser'\nimport convertDate from '../../utils/convertDate'\n\nimport useStyles from './style'\nimport UserIcon from '../UserIcon/UserIcon'\n\ntype DashboardDrawerProps = {\n  title: string\n  description: string\n  creationDate: Date\n  membersList: RandomUserType[]\n  isAdmin: boolean\n  isOpen: boolean\n  setIsOpen: () => void\n  onDescriptionSaveHandler: (descriptionText: string) => void\n  onUserRemoveHandler: (id: string) => void\n}\n\nconst DashboardDrawer = ({\n  title,\n  description,\n  creationDate,\n  membersList,\n  isAdmin,\n  isOpen,\n  setIsOpen,\n  onDescriptionSaveHandler,\n  onUserRemoveHandler\n}: DashboardDrawerProps) => {\n  const { classes } = useStyles()\n\n  const dashboardAuthor = membersList.filter((member) => member.role === 'Admin')[0]\n\n  const parsedDate = convertDate(creationDate)\n\n  return (\n    <Drawer\n      opened={isOpen}\n      onClose={setIsOpen}\n      position=\"right\"\n      size=\"xl\"\n      padding=\"xl\"\n      title={title}\n      classNames={{ drawer: classes.drawer, header: classes.drawerHeader }}\n    >\n      <Divider className={classes.divider} />\n      <ScrollArea style={{ height: 'calc(100vh - 70px)' }} className={classes.scrollArea}>\n        <header className={classes.authorHeader}>\n          <FaUser className={classes.title} />\n          <Text className={classes.title}>Made by</Text>\n        </header>\n\n        <section className={classes.authorSection}>\n          <UserIcon\n            username={dashboardAuthor.username}\n            imgUrl={dashboardAuthor.profilePictureURL}\n          />\n          <div className={classes.authorInfo}>\n            {dashboardAuthor.username}\n            <p className={classes.date}>{`on ${parsedDate}`}</p>\n          </div>\n        </section>\n\n        <Description\n          initialText={description}\n          onTextSavedHandler={\n            (descriptionText: string) => onDescriptionSaveHandler(descriptionText)\n            // eslint-disable-next-line react/jsx-curly-newline\n          }\n        />\n\n        <MembersList\n          title=\"Teams\"\n          membersList={membersList}\n          onDeleteHandler={onUserRemoveHandler}\n          isDeletable={isAdmin}\n        />\n      </ScrollArea>\n    </Drawer>\n  )\n}\n\nexport default DashboardDrawer\n","import { useState, useContext } from 'react'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport { useParams } from 'react-router-dom'\nimport { Button } from '@mantine/core'\nimport { FaEllipsisH } from 'react-icons/all'\nimport { nanoid } from 'nanoid'\n\nimport KanbanColumn from '../../components/KanbanColumn/KanbanColumn'\nimport useStyles from './style'\nimport UserIconList from '../../components/UserIconList/UserIconList'\nimport TaskModal from '../../components/TaskModal/TaskModal'\nimport { DashboardsContext } from '../../contexts/DashboardsContext'\nimport GenerateComment from '../../logic/generateComment'\nimport DashboardDrawer from '../../components/DashboardDrawer/DashboardDrawer'\n\nconst DashboardPage = () => {\n  const { id: dashboardId } = useParams()\n  const [dashboards, setDashboards] = useContext(DashboardsContext)\n  const currentDashboard = dashboards.find(({ id }) => id === dashboardId)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [isDashboardDrawerOpen, setIsDashboardDrawerOpen] = useState(false)\n  const { classes } = useStyles()\n  const [currentIssue, setCurrentIssue] = useState()\n\n  const onDragEnd = (result) => {\n    const newColumns = currentDashboard.columns\n    const findColumnSource = newColumns.find(({ id }) => id === result.source.droppableId)\n    const findIssueSource = findColumnSource.tasks.find(({ id }) => id === result.draggableId)\n    const issueSourceIndex = findColumnSource.tasks.findIndex(\n      (issue) => issue.id === result.draggableId\n    )\n    const findColumnDestination = newColumns.find(({ id }) => id === result.destination.droppableId)\n\n    findColumnSource.tasks.splice(issueSourceIndex, 1)\n    findColumnDestination.tasks.splice(result.destination.index, 0, findIssueSource)\n\n    setDashboards([\n      ...dashboards.filter(({ id }) => id !== dashboardId),\n      {\n        ...currentDashboard,\n        columns: newColumns\n      }\n    ])\n  }\n\n  const onTaskModalCloseHandler = (updatedTask) => {\n    const columnToUpdate = currentDashboard.columns.filter(({ tasks }) =>\n      tasks.some(({ id }) => id === updatedTask.id)\n    )[0]\n    const updatedColumn = {\n      ...columnToUpdate,\n      tasks: columnToUpdate.tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task))\n    }\n\n    setIsModalOpen(false)\n    setDashboards([\n      ...dashboards.filter(({ id }) => id !== dashboardId),\n      {\n        ...currentDashboard,\n        columns: currentDashboard.columns.map((column) => {\n          if (column.id === updatedColumn.id) {\n            return updatedColumn\n          }\n\n          return column\n        })\n      }\n    ])\n  }\n\n  const onTaskEventHandler = (taskId, columnId) => {\n    const findColumn = currentDashboard.columns\n      .find(({ id }) => id === columnId)\n      .tasks.find(({ id }) => id === taskId)\n    setCurrentIssue(findColumn)\n    setIsModalOpen(true)\n  }\n  const onDescriptionSaveHandler = (descriptionText) => {\n    const updatedDashboard = { ...currentDashboard, description: descriptionText }\n\n    setDashboards([\n      ...dashboards.filter(({ id }) => id !== dashboardId),\n      {\n        ...updatedDashboard\n      }\n    ])\n  }\n  const onUserRemoveHandler = (userId) => {\n    const updatedDashboard = {\n      ...currentDashboard,\n      users: currentDashboard.users.filter((user) => user.id !== userId)\n    }\n\n    setDashboards([...dashboards.filter(({ id }) => id !== dashboardId), updatedDashboard])\n  }\n\n  // TODO addIng new columns with title\n  const onAddColumnHandler = () => {\n    const columns = [...currentDashboard.columns, { id: nanoid(), tasks: [] }]\n\n    setDashboards([\n      ...dashboards.filter(({ id }) => id !== dashboardId),\n      { ...currentDashboard, columns }\n    ])\n  }\n\n  const onTaskInitializeHandler = (columnId) => {\n    const newTask = {\n      id: nanoid(),\n      description: '',\n      assigneeList: [],\n      comments: [],\n      attachment: []\n    }\n    const newColumns = currentDashboard.columns.map((column) => {\n      if (column.id === columnId) {\n        return {\n          ...column,\n          tasks: [...column.tasks, newTask]\n        }\n      }\n      return column\n    })\n\n    setDashboards([\n      ...dashboards.filter(({ id }) => id !== dashboardId),\n      {\n        ...currentDashboard,\n        columns: newColumns\n      }\n    ])\n  }\n\n  const onTaskAddHandler = (taskId, title) => {\n    const updatedTask = {\n      ...currentDashboard.columns\n        .find(({ tasks }) => tasks.some(({ id }) => id === taskId))\n        .tasks.find(({ id }) => id === taskId),\n      title\n    }\n\n    setDashboards([\n      ...dashboards.filter(({ id }) => id !== dashboardId),\n      {\n        ...currentDashboard,\n        columns: currentDashboard.columns.map((column) => {\n          if (column.tasks.some(({ id }) => id === taskId)) {\n            return {\n              ...column,\n              tasks: column.tasks.map((task) => (task.id === taskId ? updatedTask : task))\n            }\n          }\n          return column\n        })\n      }\n    ])\n  }\n\n  return (\n    <div>\n      <div style={{ display: 'flex' }}>\n        <Button classNames={{ root: classes.buttonGrayRoot }}>{currentDashboard.status}</Button>\n\n        <UserIconList listOfUsers={currentDashboard.users} isAppendable={false} iconLimit={4} />\n        <Button\n          style={{ marginLeft: 'auto' }}\n          classNames={{ root: classes.buttonGrayRoot }}\n          leftIcon={<FaEllipsisH />}\n          onClick={() => setIsDashboardDrawerOpen(true)}\n        >\n          Show Menu\n        </Button>\n      </div>\n      <div className={classes.columns}>\n        <DragDropContext onDragEnd={onDragEnd}>\n          {currentDashboard.columns.map(({ id, title, tasks }, index) => (\n            <Droppable key={id} droppableId={id} index={index}>\n              {(provided) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  <KanbanColumn\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    columnId={id}\n                    title={title}\n                    tasks={tasks}\n                    onAddHandler={onAddColumnHandler}\n                    onTaskClickHandler={onTaskEventHandler}\n                    onCreateTaskHandler={onTaskAddHandler}\n                    onTaskInitializeHandler={onTaskInitializeHandler}\n                  />\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </DragDropContext>\n      </div>\n      {isModalOpen ? (\n        <TaskModal\n          isOpen={isModalOpen}\n          commentsList={[new GenerateComment().getComment]}\n          membersList={currentDashboard.users}\n          onCloseHandler={onTaskModalCloseHandler}\n          task={currentIssue}\n        />\n      ) : null}\n      <DashboardDrawer\n        title={currentDashboard.title}\n        description={currentDashboard.description}\n        creationDate={currentDashboard.createdAt}\n        membersList={currentDashboard.users}\n        isAdmin={false}\n        isOpen={isDashboardDrawerOpen}\n        setIsOpen={() => setIsDashboardDrawerOpen((prevState) => !prevState)}\n        onDescriptionSaveHandler={onDescriptionSaveHandler}\n        onUserRemoveHandler={onUserRemoveHandler}\n      />\n    </div>\n  )\n}\nexport default DashboardPage\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  modal: {\n    padding: 0\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    width: 32,\n    height: 32,\n    padding: 0,\n    color: 'white',\n    backgroundColor: '#1a64db',\n    '&:hover': {\n      backgroundColor: theme.colors.red[6]\n    }\n  },\n  cancelButton: {\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n    '&:hover': {\n      color: '#FFF',\n      backgroundColor: theme.colors.red[6]\n    }\n  },\n  modalTitle: {\n    margin: 0\n  },\n  column: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 10\n  },\n  row: {\n    display: 'flex',\n    width: '100%',\n    gap: 10\n  },\n  footer: {\n    display: 'flex',\n    width: '100%',\n    gap: 10\n  },\n  titleInput: {\n    border: `1px solid ${theme.colors.gray[1]}`\n  },\n  coverImage: {\n    height: 130,\n    width: '100%',\n    objectFit: 'cover',\n    borderRadius: 20,\n    marginBottom: 10\n  },\n  popTarget: {\n    width: '100%'\n  },\n  tooltip: {\n    color: '#FFF',\n    backgroundColor: theme.colors.red[6]\n  },\n  spanner: {\n    width: '100%'\n  }\n}))\n\nexport default useStyles\n","import { useState } from 'react'\nimport { Popover, Modal, Input, Tooltip } from '@mantine/core'\nimport { BsGlobe, IoMdLock, MdImage, AiOutlinePlus } from 'react-icons/all'\n\n// Components\nimport ImagePicker from '../ImagePicker/ImagePicker'\nimport BlueBtn from '../BlueBtn/BlueBtn'\nimport GrayButton from '../GrayButton/GrayButton'\nimport GrayButtonFilled from '../GrayButtonFilled/GrayButtonFilled'\n\n// Logic\nimport GenerateId from '../../logic/generateId'\nimport GenerateImage from '../../logic/generateImage'\n\nimport useStyles from './style'\n\ntype DashboardModalProps = {\n  isOpen: boolean\n  setIsOpen: () => void\n  onCloseHandler: (dashboard: {\n    id: string\n    imageCoverUrl: string\n    title: string\n    status: boolean\n  }) => void\n}\n\nconst DashboardModal = ({ isOpen, setIsOpen, onCloseHandler }: DashboardModalProps) => {\n  const { classes } = useStyles()\n  const boardId = new GenerateId().getId\n  const generatedImage = new GenerateImage(boardId).getImage\n  const [currentCoverImageUrl, setCurrentCoverImageUrl] = useState(generatedImage)\n  const [currentTitle, setCurrentTitle] = useState('')\n  const [visibleImagePicker, setVisibleImagePicker] = useState(false)\n  const [isPrivate, setIsPrivate] = useState(false)\n  const [tooltipOpened, setTooltipOpened] = useState(false)\n\n  const onCreateBoardHandler = () => {\n    if (currentTitle) {\n      onCloseHandler({\n        id: boardId,\n        imageCoverUrl: currentCoverImageUrl,\n        title: currentTitle,\n        status: isPrivate\n      })\n      setIsOpen()\n    } else {\n      setTooltipOpened(true)\n    }\n  }\n\n  const onImagePickerHandler = (val: string) => {\n    setCurrentCoverImageUrl(val)\n  }\n\n  return (\n    <Modal\n      classNames={{ root: classes.modal, close: classes.closeButton, header: classes.modalTitle }}\n      opened={isOpen}\n      onClose={setIsOpen}\n      centered\n      overflow=\"inside\"\n      size=\"340px\"\n    >\n      {currentCoverImageUrl ? (\n        <img src={currentCoverImageUrl} className={classes.coverImage} alt=\"Cover\" />\n      ) : null}\n      <section className={classes.column}>\n        <Tooltip\n          classNames={{ body: classes.tooltip, arrow: classes.tooltip }}\n          label=\"This field must not be empty\"\n          withArrow\n          opened={tooltipOpened}\n        >\n          <Input\n            className={classes.titleInput}\n            radius=\"md\"\n            placeholder=\"Add board title\"\n            invalid={tooltipOpened}\n            onChange={\n              (event: React.ChangeEvent<HTMLInputElement>) => {\n                setCurrentTitle(event.target.value)\n                setTooltipOpened(false)\n              }\n              // eslint-disable-next-line react/jsx-curly-newline\n            }\n          />\n        </Tooltip>\n        <section className={classes.row}>\n          <Popover\n            opened={visibleImagePicker}\n            onClose={() => setVisibleImagePicker(false)}\n            target={\n              <GrayButtonFilled\n                onClick={() => setVisibleImagePicker((prevState: boolean) => !prevState)}\n                leftIcon={<MdImage />}\n              >\n                Cover\n              </GrayButtonFilled>\n            }\n            position=\"left\"\n            placement=\"start\"\n            width={260}\n            spacing={0}\n            radius=\"md\"\n            className={classes.popTarget}\n          >\n            <ImagePicker imageSize=\"small\" onImageSelectedHandler={onImagePickerHandler} />\n          </Popover>\n          <GrayButtonFilled\n            onClick={() => setIsPrivate((prevState: boolean) => !prevState)}\n            leftIcon={isPrivate ? <IoMdLock /> : <BsGlobe />}\n          >\n            {isPrivate ? 'Private' : 'Public'}\n          </GrayButtonFilled>\n        </section>\n        <section className={classes.footer}>\n          <div className={classes.spanner} />\n          <GrayButton className={classes.cancelButton} onClick={setIsOpen}>\n            Cancel\n          </GrayButton>\n          <BlueBtn leftIcon={<AiOutlinePlus />} onClick={onCreateBoardHandler}>\n            Create\n          </BlueBtn>\n        </section>\n      </section>\n    </Modal>\n  )\n}\n\nexport default DashboardModal\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  dashboardMain: {\n    border: '1px solid',\n    borderColor: theme.colors.gray[2],\n    borderRadius: theme.radius.md,\n    padding: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: 5\n    }\n  },\n  title: { fontFamily: theme.other.secondaryFont },\n  userList: {\n    alignSelf: 'flex-start'\n  }\n}))\n\nexport default useStyles\n","import { Image, Text } from '@mantine/core'\nimport PropTypes from 'prop-types'\nimport UserIconList from '../UserIconList/UserIconList'\nimport useStyles from './style'\n\nexport const Dashboard = ({ title, imageCoverUrl, users, onClickHandler }) => {\n  const { classes } = useStyles()\n  return (\n    <div\n      className={classes.dashboardMain}\n      onClick={onClickHandler}\n      onKeyUp={(e) => {\n        if (e.which === 13) {\n          onClickHandler()\n        }\n      }}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Image src={imageCoverUrl} alt=\"cover\" fit=\"cover\" radius=\"md\" />\n      <Text className={classes.title}>{title}</Text>\n      <div className={classes.userList}>\n        <UserIconList listOfUsers={users} isAppendable={false} iconLimit={3} />\n      </div>\n    </div>\n  )\n}\nDashboard.propTypes = {\n  title: PropTypes.string,\n  imageCoverUrl: PropTypes.string,\n  users: PropTypes.instanceOf(Array),\n  onClickHandler: PropTypes.func\n}\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  container: {\n    padding: '80px 60px'\n  },\n  boardsHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '10px 0'\n  },\n  title: {\n    fontFamily: theme.headings.fontFamily,\n    fontSize: 18\n  },\n  dashboards: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(4, 1fr)',\n    gridTemplateRows: 'repeat(2, 300px)',\n    gridGap: 20\n  },\n  columns: {\n    display: 'flex',\n    padding: 10,\n    margin: 10\n  },\n  buttonGrayRoot: {\n    backgroundColor: theme.colors.gray[0],\n    color: theme.colors.gray[6],\n    fontSize: '14px',\n    lineHeight: '18px',\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n    '&:hover': {\n      color: '#FFF',\n      backgroundColor: theme.fn.darken(theme.colors.gray[0], 0.2)\n    }\n  }\n}))\n\nexport default useStyles\n","/* eslint-disable no-console */\nimport { useState, useContext } from 'react'\nimport { Text, Button } from '@mantine/core'\nimport { useNavigate } from 'react-router-dom'\n\n// Components\nimport { AiOutlinePlus } from 'react-icons/all'\nimport DashboardModal from '../../components/DashboardModal/DashboardModal'\nimport { Dashboard } from '../../components/Dashboard/Dashboard'\n\n// Contexts & routes\nimport { DashboardsContext } from '../../contexts/DashboardsContext'\n\n// Logic\nimport RandomUser, { RandomUserType } from '../../logic/randomUser'\nimport GenerateTask from '../../logic/generateTask'\n\n// Styles\nimport useStyles from './style'\n\ntype DashboardProps = {\n  id: string\n  imageCoverUrl: string\n  title: string\n  status: boolean\n}\n\nconst DashboardsPage = () => {\n  const { classes } = useStyles()\n\n  const navigate = useNavigate()\n\n  const [isOpen, setIsOpen] = useState(false)\n  const [dashboards, setDashboards] = useContext(DashboardsContext)\n\n  const openDashboardModal = () => {\n    setIsOpen((prevStateIsOpen) => !prevStateIsOpen)\n  }\n\n  const addNewDashboard = ({ id, imageCoverUrl, title, status }: DashboardProps) => {\n    const currentUser = new RandomUser().userData\n    currentUser.role = 'Admin'\n    const createdAt = new Date()\n    const users: RandomUserType[] = []\n    users.push(currentUser)\n    const newDashboard = {\n      id,\n      description: '',\n      imageCoverUrl,\n      title,\n      createdAt,\n      users,\n      status,\n      admin: 'userId',\n      columns: [\n        {\n          id: '2',\n          title: 'New column',\n          tasks: [new GenerateTask(users)]\n        },\n        {\n          id: '3',\n          tasks: []\n        }\n      ]\n    }\n    setDashboards([...dashboards, newDashboard])\n  }\n\n  return (\n    <article className={classes.container}>\n      <header className={classes.boardsHeader}>\n        <Text className={classes.title}>All Boards</Text>\n        <Button onClick={openDashboardModal} leftIcon={<AiOutlinePlus />}>\n          Add\n        </Button>\n      </header>\n      <section className={classes.dashboards}>\n        {dashboards.map(({ id, title, users, imageCoverUrl }) => (\n          <Dashboard\n            key={id}\n            title={title}\n            users={users}\n            imageCoverUrl={imageCoverUrl}\n            onClickHandler={() => navigate(`${id}`)}\n          />\n        ))}\n      </section>\n      <DashboardModal\n        isOpen={isOpen}\n        setIsOpen={openDashboardModal}\n        onCloseHandler={addNewDashboard}\n      />\n    </article>\n  )\n}\n\nexport default DashboardsPage\n","import { Route, Routes } from 'react-router-dom'\nimport DashboardPage from '../pages/DashboardPage/DashboardPage'\nimport DashboardsPage from '../pages/DashboardsPage/DashboardsPage'\n\nexport const routes = {\n  dashboards: 'dashboards',\n  dashboard: 'dashboards/:id'\n}\n\nconst RoutesDashboards = () => (\n  <Routes>\n    <Route path={routes.dashboards} element={<DashboardsPage />} />\n    <Route path={routes.dashboard} element={<DashboardPage />} />\n  </Routes>\n)\nexport default RoutesDashboards\n","import { createStyles } from '@mantine/core'\n\nconst useStyles = createStyles((theme) => ({\n  navbar: {\n    display: 'flex',\n    flexWrap: 'nowrap',\n    height: '68px',\n    boxShadow: '0px 2px 2px 0px #0000000D',\n    padding: '12px'\n  },\n  navbar__logo: {\n    display: 'flex',\n    alignItems: 'center',\n    '& img': {\n      margin: '0 10px'\n    },\n    '& h1': {\n      margin: 0,\n      fontSize: '18px',\n      fontFamily: theme.headings.fontFamily,\n      color: '#333333'\n    }\n  },\n  navbar__dashboard: {\n    margin: '0 30px 0 90px',\n    display: 'flex',\n    alignItems: 'center',\n\n    '& h2': {\n      margin: 0,\n      fontSize: '18px',\n      fontFamily: theme.headings.fontFamily,\n      weight: 500,\n      color: '#333333'\n    },\n    '& > div': {\n      margin: '0 24px',\n      width: '0px',\n      height: '35px',\n      border: '1px solid #E0E0E0'\n    }\n  },\n  navbar__options: {\n    display: 'flex',\n    marginLeft: 'auto',\n    alignItems: 'center'\n  },\n  navbar__options__select__wrapper: {\n    margin: '0 15px 0 60px'\n  },\n  navbar__options__select__input: {\n    border: 0\n  },\n  navbar__options__select__icon: {\n    margin: '0 30px 0 -10px'\n  },\n  navbar__options__select__rightSection: {\n    margin: '0 30px 0 0'\n  }\n}))\n\nexport default useStyles\n","/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable arrow-body-style */\nimport { Select } from '@mantine/core'\nimport { AiFillCaretDown } from 'react-icons/ai'\nimport { IoApps } from 'react-icons/io5'\nimport { useNavigate } from 'react-router-dom'\nimport { RandomUserType } from '../../logic/randomUser'\nimport { routes } from '../../routes/RoutesDashboards'\nimport GrayButtonFilled from '../GrayButtonFilled/GrayButtonFilled'\nimport SearchBar from '../SearchBar/SearchBar'\nimport useStyles from './styles'\n\nexport type NavbarProps = {\n  loggedUser: RandomUserType\n  boardTitle?: string\n}\n\nconst Navbar = ({ boardTitle, loggedUser }: NavbarProps) => {\n  const { classes } = useStyles()\n  const navigate = useNavigate()\n\n  return (\n    <nav className={classes.navbar}>\n      <div className={classes.navbar__logo}>\n        <img src=\"/thullo_logo.png\" width=\"32px\" height=\"29px\" alt=\"Thullo logo\" />\n        <h1>Thullo</h1>\n      </div>\n      {boardTitle && (\n        <div className={classes.navbar__dashboard}>\n          <h2>{boardTitle}</h2>\n          <div />\n          <GrayButtonFilled onClick={() => navigate(routes.dashboards)} leftIcon={<IoApps />}>\n            All board\n          </GrayButtonFilled>\n        </div>\n      )}\n      <div className={classes.navbar__options}>\n        <SearchBar\n          onKeywordChangeHandler={() => {}}\n          size=\"sm\"\n          actionType=\"button\"\n          wrapperProps={{ width: '300px' }}\n        />\n        <Select\n          classNames={{\n            wrapper: classes.navbar__options__select__wrapper,\n            input: classes.navbar__options__select__input,\n            icon: classes.navbar__options__select__icon,\n            rightSection: classes.navbar__options__select__rightSection\n          }}\n          placeholder={loggedUser.username}\n          data={[\n            { value: 'react', label: 'React' },\n            { value: 'vue', label: 'Vue' }\n          ]}\n          icon={<img src={loggedUser.profilePictureURL} alt=\"user avatar\" />}\n          rightSection={<AiFillCaretDown />}\n        />\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { FC } from 'react'\nimport { MantineProvider } from '@mantine/styles'\n\nexport const ThemeProvider: FC = ({ children }) => (\n  <MantineProvider\n    withNormalizeCSS\n    withGlobalStyles\n    theme={{\n      fontFamily: 'Open Sans',\n      colors: {\n        gray: [\n          '#F2F2F2',\n          '#E0E0E0',\n          '#BDBDBD',\n          '#AFAFAF',\n          '#A0A0A0',\n          '#919191',\n          '#828282',\n          '#696969',\n          '#4F4F4F',\n          '#333333'\n        ]\n      },\n      headings: {\n        fontFamily: 'Poppins'\n      },\n      other: {\n        secondaryFont: 'Poppins'\n      }\n    }}\n  >\n    {children}\n  </MantineProvider>\n)\n","import { FC, useState, useMemo } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport Navbar from './components/Navbar/Navbar'\nimport { ThemeProvider } from './contexts/ThemeContext'\nimport RandomUser from './logic/randomUser'\nimport {\n  DashboardsContext,\n  dashboardsDefaultValue,\n  IDashboardsContext\n} from './contexts/DashboardsContext'\nimport RoutesDashboards from './routes/RoutesDashboards'\n\nexport const App: FC = () => {\n  const [dashboards, setDashboards] = useState(dashboardsDefaultValue)\n  const memoizedDashboardsContext = useMemo(\n    () => [dashboards, setDashboards],\n    [dashboards]\n  ) as IDashboardsContext\n\n  return (\n    <ThemeProvider>\n      <DashboardsContext.Provider value={memoizedDashboardsContext}>\n        <BrowserRouter>\n          <Navbar loggedUser={new RandomUser().userData} boardTitle=\"test\" />\n          <RoutesDashboards />\n        </BrowserRouter>\n      </DashboardsContext.Provider>\n    </ThemeProvider>\n  )\n}\n","import { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}