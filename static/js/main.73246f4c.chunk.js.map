{"version":3,"sources":["components/KanbanColumn/style.js","components/Task/style.js","components/UserIcon/style.js","components/UserIcon/UserIcon.tsx","components/UserIconList/style.js","components/UserIconList/UserIconList.js","components/Task/Task.js","components/BlueBtn/style.js","components/BlueBtn/BlueBtn.tsx","components/KanbanColumn/KanbanColumn.js","pages/DashboardPage/style.js","components/GrayButton/style.js","components/GrayButton/GrayButton.tsx","components/Description/style.js","components/Description/Description.js","utils/convertDate.ts","components/Attachment/style.js","components/Attachment/Attachment.tsx","components/AttachmentsList/style.js","components/AttachmentsList/AttachmentsList.tsx","components/Comment/style.js","components/Comment/ButtonComment.js","components/Comment/Comment.js","components/CommentInput/style.js","components/CommentInput/CommentInput.js","components/ImagePicker/style.js","components/SearchBar/ActionIconSearch.tsx","components/SearchBar/SearchButton.tsx","components/SearchBar/styles.ts","components/SearchBar/SearchBar.tsx","components/ImagePicker/ImagePicker.js","utils/functions.js","config.ts","components/RedButton/style.js","components/RedButton/RedButton.tsx","components/MembersList/style.js","components/MembersList/MembersList.tsx","components/MemberCardContainer/style.js","components/MemberCardContainer/MemberCardContainer.tsx","components/GrayButtonFilled/style.js","components/GrayButtonFilled/GrayButtonFilled.tsx","logic/generateAttachment.ts","logic/randomUser.ts","logic/generateComment.ts","components/TaskModal/style.js","components/TaskModal/TaskModal.tsx","logic/generateId.ts","logic/generateImage.ts","logic/generateTask.ts","logic/generateBoard.js","contexts/DashboardsContext.tsx","components/DashboardDrawer/style.js","components/DashboardDrawer/DashboardDrawer.tsx","pages/DashboardPage/DashboardPage.js","components/DashboardModal/style.js","components/DashboardModal/DashboardModal.tsx","components/Dashboard/style.js","components/Dashboard/Dashboard.js","pages/DashboardsPage/style.ts","pages/DashboardsPage/DashboardsPage.tsx","routes/RoutesDashboards.js","components/Navbar/styles.ts","components/Navbar/Navbar.tsx","contexts/ThemeContext.tsx","App.tsx","index.tsx"],"names":["useStyles","createStyles","theme","task","margin","title","fontFamily","other","secondaryFont","column","width","padding","marginTop","taskMain","border","borderColor","colors","gray","borderRadius","radius","md","display","flexDirection","alignItems","attachment","fontSize","iconsAlignRight","marginLeft","color","marginRight","input","buttonSave","placeholder","backgroundColor","textTransform","UserIcon","username","imgUrl","classes","Avatar","classNames","src","size","name","firstLetters","match","join","getUserNameInitials","userIconList","UserIconList","listOfUsers","isAppendable","onAppendHandler","iconLimit","isAboveLimit","length","numberAboveLimit","className","slice","map","user","profilePictureURL","id","Text","ActionIcon","variant","onClick","Task","columnId","imageCover","assignedUsers","clickEventHandler","numberOfComments","numberOfAttachments","onCreateTaskHandler","useState","newTitle","setNewTitle","onKeyUp","e","which","role","tabIndex","Image","alt","fit","Input","onChange","target","value","Button","leftIcon","root","maxWidth","transition","fn","darken","inner","justifyContent","BlueBtn","children","rightIcon","KanbanColumn","tasks","onAddHandler","onTaskInitializeHandler","onTaskClickHandler","undefined","index","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","imageCoverURL","assigneeList","columns","overflowX","buttonGrayRoot","lineHeight","grayButton","GrayButton","rest","outline","descriptionHeader","headings","fontWeight","button","textEditorArea","paddingTop","paddingBottom","buttonsArea","rootTextEditor","toolbarInner","Description","initialText","onTextSavedHandler","text","setText","isEditing","setEditing","refText","useRef","triggerEdit","onSaveText","current","RichTextEditor","toolbar","controls","onKeyDown","getHotkeyHandler","readOnly","convertDate","date","dateSplitArray","toLocaleDateString","timeZone","month","day","year","split","divBody","imagePlaceholder","divInfo","marginBottom","buttonDelete","red","buttonDownload","green","Attachment","itemUrl","fileName","onDeleteHandler","attachmentDate","height","withPlaceholder","align","component","href","download","attachmentHeader","grayBtn","attachmentSection","AttachmentsList","attachments","divUserInfo","divComment","divButtons","buttonSubtle","ButtonComment","onClickEvent","subtle","compact","Comment","userData","textContent","onEditHandler","editability","setEditability","currentContent","setCurrentContent","newDate","hour","minute","Container","Textarea","defaultValue","commentMain","alignSelf","CommentInput","onValueChangedHandler","onSubmitHandler","event","searchBar","photoSearchText","photoUnsplashText","imageResults","flexWrap","ActionIconSearch","SearchButton","borderWidth","wrapper","boxShadow","buttonRightSection","SearchBar","onKeywordChangeHandler","actionType","restProps","rightSection","pickerImagesSizes","ImagePicker","imageSize","onImageSelectedHandler","images","setImages","func","timer","args","clearTimeout","setTimeout","debounce","fetch","process","then","res","json","results","catch","err","console","error","imageLink","urls","thumb","RedButton","membersListHeader","memberSection","gridTemplateColumns","admin","textAlign","MembersList","membersList","isDeletable","showButtons","memberCard","memberCardTitle","memberCardDescription","memberCardInput","filter","usersContainer","overflow","memberContainer","selectedUser","blue","icon","MemberCardContainer","addUserHandler","searchTerm","setSearchTerm","selectedUsers","setSelectedUsers","toLowerCase","includes","rightSectionWidth","UnstyledButton","indexOf","prevSelectedUsers","prevUserId","handleMemberClick","weight","Center","GrayButtonFilled","GenerateAttachment","this","generateAttachment","faker","past","datatype","uuid","Math","random","system","commonFileName","url","internet","RandomUser","firstName","lastName","generateRole","parseInt","String","GenerateComment","lorem","lines","modal","modalTitle","container","gridGap","closeButton","position","top","right","sidebar","gap","sidebarHeader","sectionTitle","actionSection","coverImage","objectFit","popTarget","cont","TaskModal","isOpen","commentsList","onCloseHandler","description","currentDescription","setCurrentDescription","currentAttachments","setCurrentAttachments","currentCoverImageURL","setCurrentCoverImageURL","currentAssigneesList","setCurrentAssigneesList","currentComments","setCurrentComments","currentInputComment","setCurrentInputComment","visibleImagePicker","setVisibleImagePicker","visibleMemberList","setVisibleMemberList","currentMemberList","setCurrentMemberList","commentOnDeleteHandler","deleteId","prevCurrentComments","handleCommentEdit","editedId","editedText","editedCommentIndex","findIndex","newComments","Modal","close","header","opened","onClose","comments","centered","descriptionText","newAttachment","getAttachment","prevState","prevCurrentAttachments","fakeComment","getComment","Date","Popover","placement","spacing","val","deletedID","newAssigneesList","splice","selectedUsersID","newAssignees","selectedUserID","find","assignee","member","some","selectedId","GenerateId","GenerateImage","image","GenerateTask","ListOfUsers","getId","sentence","paragraph","getAssigneeList","getImageCover","randomList","helpers","shuffle","numberOfAssignee","floor","i","push","getImage","Array","fill","normalUsers","admins","GenerateBoard","taskData","users","status","createdOn","board1","board2","board3","dashboardsDefaultValue","imageCoverUrl","createdAt","DashboardsContext","React","createContext","drawer","drawerHeader","authorHeader","authorSection","authorInfo","divider","scrollArea","paddingRight","DashboardDrawer","creationDate","isAdmin","setIsOpen","onDescriptionSaveHandler","onUserRemoveHandler","dashboardAuthor","parsedDate","Drawer","Divider","ScrollArea","style","DashboardPage","dashboardId","useParams","useContext","dashboards","setDashboards","currentDashboard","isModalOpen","setIsModalOpen","isDashboardDrawerOpen","setIsDashboardDrawerOpen","currentIssue","setCurrentIssue","onTaskEventHandler","taskId","findColumn","onAddColumnHandler","nanoid","newTask","newColumns","onTaskAddHandler","updatedTask","onDragEnd","result","findColumnSource","source","droppableId","findIssueSource","issueSourceIndex","issue","findColumnDestination","destination","droppableProps","columnToUpdate","updatedColumn","updatedDashboard","userId","cancelButton","row","footer","titleInput","tooltip","spanner","DashboardModal","boardId","generatedImage","currentCoverImageUrl","setCurrentCoverImageUrl","currentTitle","setCurrentTitle","isPrivate","setIsPrivate","tooltipOpened","setTooltipOpened","Tooltip","body","arrow","label","withArrow","invalid","dashboardMain","userList","Dashboard","onClickHandler","boardsHeader","gridTemplateRows","DashboardsPage","navigate","useNavigate","openDashboardModal","prevStateIsOpen","currentUser","newDashboard","routes","RoutesDashboards","path","element","navbar","navbar__logo","navbar__dashboard","navbar__options","navbar__options__select__wrapper","navbar__options__select__input","navbar__options__select__icon","navbar__options__select__rightSection","Navbar","boardTitle","loggedUser","wrapperProps","Select","data","ThemeProvider","MantineProvider","withNormalizeCSS","withGlobalStyles","App","memoizedDashboardsContext","useMemo","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73246f4c.chunk.js","sourcesContent":["import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  task: {\r\n    margin: 0\r\n  },\r\n  title: {\r\n    fontFamily: theme.other.secondaryFont\r\n  },\r\n  column: {\r\n    width: 350,\r\n    padding: 12,\r\n    '& > *': {\r\n      marginTop: 5\r\n    }\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  taskMain: {\r\n    border: '1px solid',\r\n    borderColor: theme.colors.gray[2],\r\n    borderRadius: theme.radius.md,\r\n    padding: 4,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: 5\r\n    }\r\n  },\r\n  title: { fontFamily: theme.other.secondaryFont },\r\n  attachment: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    fontSize: 10\r\n  },\r\n  iconsAlignRight: {\r\n    marginLeft: 'auto',\r\n    color: theme.colors.gray[3],\r\n    marginRight: 9\r\n  },\r\n  input: {\r\n    color: theme.colors.gray[3],\r\n    borderRadius: theme.radius.md,\r\n    width: '100%'\r\n  },\r\n  buttonSave: {\r\n    marginLeft: 'auto'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  placeholder: {\r\n    backgroundColor: theme.colors.gray[2],\r\n    color: '#FFF',\r\n    textTransform: 'uppercase'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { Avatar } from '@mantine/core'\r\nimport useStyles from './style'\r\n\r\ntype UserIconProps = {\r\n  username: string\r\n  imgUrl?: string\r\n}\r\n\r\nconst UserIcon = ({ username, imgUrl }: UserIconProps) => {\r\n  const { classes } = useStyles()\r\n  function getUserNameInitials(name: string) {\r\n    const firstLetters = name.match(/\\b(\\w)/g) // ['j','D']\r\n    return firstLetters?.join('')\r\n  }\r\n  return (\r\n    <Avatar classNames={{ placeholder: classes.placeholder }} src={imgUrl} radius=\"md\" size={28}>\r\n      {!imgUrl && getUserNameInitials(username)}\r\n    </Avatar>\r\n  )\r\n}\r\nexport default UserIcon\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  userIconList: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: 5\r\n    }\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { ActionIcon, Text } from '@mantine/core'\r\nimport { MdAdd } from 'react-icons/md'\r\nimport PropTypes from 'prop-types'\r\nimport UserIcon from '../UserIcon/UserIcon'\r\nimport useStyles from './style'\r\n\r\nconst UserIconList = ({ listOfUsers, isAppendable, onAppendHandler, iconLimit }) => {\r\n  const { classes } = useStyles()\r\n  const isAboveLimit = listOfUsers.length > iconLimit\r\n  const numberAboveLimit = listOfUsers.length - iconLimit\r\n  return (\r\n    <div className={classes.userIconList}>\r\n      {listOfUsers.slice(0, iconLimit).map((user) => (\r\n        <UserIcon key={user.id} username={user.username} imgUrl={user.profilePictureURL} />\r\n      ))}\r\n      {isAboveLimit ? <Text size=\"sm\" color=\"gray\">{`+ ${numberAboveLimit} others`}</Text> : null}\r\n      {isAppendable ? (\r\n        <ActionIcon variant=\"filled\" size={28} color=\"blue\" radius=\"md\" onClick={onAppendHandler}>\r\n          <MdAdd size={30} />\r\n        </ActionIcon>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\nUserIconList.propTypes = {\r\n  listOfUsers: PropTypes.instanceOf(Array),\r\n  isAppendable: PropTypes.bool,\r\n  onAppendHandler: PropTypes.func,\r\n  iconLimit: PropTypes.number\r\n}\r\n\r\nexport default UserIconList\r\n","import { Button, Image, Input, Text } from '@mantine/core'\r\nimport { BsPaperclip, MdMessage } from 'react-icons/all'\r\nimport { MdAdd } from 'react-icons/md'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport useStyles from './style'\r\nimport UserIconList from '../UserIconList/UserIconList'\r\n\r\nconst Task = ({\r\n  id,\r\n  columnId,\r\n  title,\r\n  imageCover,\r\n  assignedUsers,\r\n  clickEventHandler,\r\n  numberOfComments,\r\n  numberOfAttachments,\r\n  onCreateTaskHandler\r\n}) => {\r\n  const { classes } = useStyles()\r\n  const [newTitle, setNewTitle] = useState()\r\n  return title ? (\r\n    <div\r\n      className={classes.taskMain}\r\n      onClick={() => clickEventHandler(id, columnId)}\r\n      onKeyUp={(e) => {\r\n        if (e.which === 13) {\r\n          clickEventHandler()\r\n        }\r\n      }}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n    >\r\n      {imageCover ? <Image src={imageCover} alt=\"cover\" fit=\"cover\" radius=\"md\" /> : null}\r\n      <Text className={classes.title}>{title}</Text>\r\n      <div className={classes.attachment}>\r\n        <UserIconList listOfUsers={assignedUsers} isAppendable iconLimit={3} />\r\n        <Text className={classes.iconsAlignRight} size=\"sm\">\r\n          <MdMessage />\r\n          {numberOfComments}\r\n          <BsPaperclip />\r\n          {numberOfAttachments}\r\n        </Text>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className={classes.taskMain}>\r\n      <Input\r\n        className={classes.input}\r\n        placeholder=\"Add title\"\r\n        radius=\"md\"\r\n        onChange={(e) => setNewTitle(e.target.value)}\r\n      />\r\n      <Button\r\n        leftIcon={<MdAdd />}\r\n        className={classes.buttonSave}\r\n        onClick={() => onCreateTaskHandler(id, newTitle)}\r\n      >\r\n        Save\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\nTask.propTypes = {\r\n  title: PropTypes.string,\r\n  imageCover: PropTypes.string,\r\n  assignedUsers: PropTypes.instanceOf(Array),\r\n  clickEventHandler: PropTypes.func,\r\n  numberOfComments: PropTypes.number,\r\n  numberOfAttachments: PropTypes.number,\r\n  onCreateTaskHandler: PropTypes.func\r\n}\r\n\r\nexport default Task\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: '#DAE4FD',\r\n    color: '#2F80ED',\r\n    maxWidth: '100%',\r\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\r\n    '&:hover': {\r\n      color: '#FFF',\r\n      backgroundColor: theme.fn.darken('#00acee', 0.1)\r\n    }\r\n  },\r\n  inner: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { Button } from '@mantine/core'\r\nimport useStyles from './style'\r\n\r\ntype BlueBtnProps = {\r\n  children?: string\r\n  onClick: (e?: React.MouseEvent<HTMLElement>) => void\r\n  rightIcon?: React.ReactNode\r\n  leftIcon?: React.ReactNode\r\n}\r\n\r\nconst BlueBtn = ({ children, onClick, rightIcon, leftIcon }: BlueBtnProps) => {\r\n  const { classes } = useStyles()\r\n  return (\r\n    <Button\r\n      radius=\"md\"\r\n      onClick={onClick}\r\n      variant=\"outline\"\r\n      rightIcon={rightIcon}\r\n      leftIcon={leftIcon}\r\n      classNames={{ root: classes.root, inner: classes.inner }}\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\nexport default BlueBtn\r\n","import PropTypes from 'prop-types'\r\nimport { BsPlusLg } from 'react-icons/all'\r\nimport { Text } from '@mantine/core'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport useStyles from './style'\r\nimport Task from '../Task/Task'\r\nimport BlueBtn from '../BlueBtn/BlueBtn'\r\n\r\nconst KanbanColumn = ({\r\n  columnId,\r\n  title,\r\n  tasks,\r\n  onAddHandler,\r\n  onTaskInitializeHandler,\r\n  onTaskClickHandler,\r\n  onCreateTaskHandler\r\n}) => {\r\n  const { classes } = useStyles()\r\n\r\n  return title === undefined && tasks.length === 0 ? (\r\n    <div className={classes.column}>\r\n      <BlueBtn onClick={onAddHandler} rightIcon={<BsPlusLg />}>\r\n        Add another list\r\n      </BlueBtn>\r\n    </div>\r\n  ) : (\r\n    <div className={classes.column}>\r\n      <Text className={classes.title}>{title}</Text>\r\n\r\n      {tasks.map((task, index) => (\r\n        <Draggable draggableId={task.id} key={task.id} index={index}>\r\n          {(provided) => (\r\n            <div\r\n              className={classes.task}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              <Task\r\n                {...provided.dragHandleProps}\r\n                id={task.id}\r\n                columnId={columnId}\r\n                title={task.title}\r\n                imageCover={task.imageCoverURL}\r\n                assignedUsers={task.assigneeList}\r\n                numberOfAttachments={task.attachment.length}\r\n                numberOfComments={1}\r\n                clickEventHandler={onTaskClickHandler}\r\n                onCreateTaskHandler={onCreateTaskHandler}\r\n              />\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      ))}\r\n      <BlueBtn onClick={() => onTaskInitializeHandler(columnId)} rightIcon={<BsPlusLg />}>\r\n        Add another card\r\n      </BlueBtn>\r\n    </div>\r\n  )\r\n}\r\n\r\nKanbanColumn.propTypes = {\r\n  title: PropTypes.string\r\n}\r\n\r\nexport default KanbanColumn\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  columns: {\r\n    display: 'flex',\r\n    padding: 10,\r\n    margin: 10,\r\n    overflowX: 'scroll'\r\n  },\r\n  buttonGrayRoot: {\r\n    backgroundColor: theme.colors.gray[0],\r\n    color: theme.colors.gray[6],\r\n    fontSize: '14px',\r\n    lineHeight: '18px',\r\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\r\n    '&:hover': {\r\n      color: '#FFF',\r\n      backgroundColor: theme.fn.darken(theme.colors.gray[0], 0.2)\r\n    }\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  grayButton: {\r\n    borderColor: theme.colors.gray[2],\r\n    color: theme.colors.gray[6]\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { Button } from '@mantine/core'\r\nimport type { ButtonProps } from '@mantine/core'\r\nimport useStyles from './style'\r\n\r\nconst GrayButton = ({\r\n  leftIcon,\r\n  children,\r\n  onClick,\r\n  ...rest\r\n}: ButtonProps<'button'> | ButtonProps<'a'>) => {\r\n  const { classes } = useStyles()\r\n  return (\r\n    <Button\r\n      classNames={{ outline: classes.grayButton }}\r\n      leftIcon={leftIcon}\r\n      color=\"gray\"\r\n      variant=\"outline\"\r\n      radius={8}\r\n      onClick={onClick}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default GrayButton\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst padding = '7px'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  descriptionHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  title: {\r\n    color: theme.colors.gray[2],\r\n    fontFamily: theme.headings.fontFamily,\r\n    fontWeight: 600,\r\n    fontSize: '14px',\r\n    lineHeight: '15px',\r\n    margin: '0 6px'\r\n  },\r\n  button: {\r\n    marginLeft: '10px',\r\n    color: theme.colors.gray[6],\r\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\r\n    '&:hover': {\r\n      color: theme.colors.gray[0],\r\n      backgroundColor: theme.colors.gray[3]\r\n    }\r\n  },\r\n  textEditorArea: {\r\n    paddingTop: padding,\r\n    paddingBottom: padding\r\n  },\r\n  buttonsArea: {\r\n    paddingTop: padding,\r\n    paddingBottom: padding,\r\n    '& > *': {\r\n      marginRight: '10px'\r\n    }\r\n  },\r\n  rootTextEditor: {\r\n    borderRadius: '8px',\r\n    borderColor: theme.colors.gray[9]\r\n  },\r\n  toolbarInner: {\r\n    borderRadius: 'inherit',\r\n    margin: '0px'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { useState, useRef } from 'react'\r\nimport { Button, Text } from '@mantine/core'\r\nimport { getHotkeyHandler } from '@mantine/hooks'\r\nimport { RichTextEditor } from '@mantine/rte'\r\nimport { IoDocumentText, FaPen } from 'react-icons/all'\r\nimport GrayButton from '../GrayButton/GrayButton'\r\nimport useStyles from './style'\r\n\r\nconst Description = ({ initialText, onTextSavedHandler }) => {\r\n  const [text, setText] = useState(initialText)\r\n  const [isEditing, setEditing] = useState(false)\r\n  const refText = useRef(initialText)\r\n\r\n  const { classes } = useStyles()\r\n\r\n  const triggerEdit = () => {\r\n    setEditing(!isEditing)\r\n  }\r\n  const onCancelHandler = () => {\r\n    setText(refText.current)\r\n    triggerEdit()\r\n  }\r\n  const onSaveText = () => {\r\n    refText.current = text\r\n    triggerEdit()\r\n    onTextSavedHandler(text)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header className={classes.descriptionHeader}>\r\n        <IoDocumentText className={classes.title} />\r\n        <Text className={classes.title}>Description</Text>\r\n        {isEditing ? null : (\r\n          <GrayButton\r\n            className={classes.button}\r\n            radius={8}\r\n            leftIcon={<FaPen />}\r\n            onClick={triggerEdit}\r\n          >\r\n            Edit\r\n          </GrayButton>\r\n        )}\r\n      </header>\r\n      {isEditing ? (\r\n        <div className={classes.textEditorArea}>\r\n          <RichTextEditor\r\n            classNames={{\r\n              root: classes.rootTextEditor,\r\n              toolbar: classes.toolbarInner\r\n            }}\r\n            controls={[\r\n              ['bold', 'italic', 'underline', 'strike', 'clean'],\r\n              ['h1', 'h2', 'h3', 'h4'],\r\n              ['unorderedList', 'orderedList'],\r\n              ['link', 'blockquote', 'codeBlock'],\r\n              ['alignLeft', 'alignCenter', 'alignRight'],\r\n              ['sup', 'sub']\r\n            ]}\r\n            value={text}\r\n            onChange={setText}\r\n            onKeyDown={getHotkeyHandler([['shift+Enter', onSaveText]])}\r\n          />\r\n          <div className={classes.buttonsArea}>\r\n            <Button radius=\"md\" color=\"green\" onClick={onSaveText}>\r\n              Save\r\n            </Button>\r\n            <Button variant=\"subtle\" color=\"gray\" onClick={onCancelHandler}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={classes.textEditorArea}>\r\n          <RichTextEditor readOnly value={text} onChange={setText} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Description\r\n","const convertDate = (date: Date) => {\r\n  const newDate = date.toLocaleDateString('en-GB', {\r\n    timeZone: 'CET',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    year: 'numeric'\r\n  })\r\n  const dateSplitArray = newDate.split(' ')\r\n  const parsedDate = `${dateSplitArray[0]} ${dateSplitArray[1]}, ${dateSplitArray[2]}`\r\n  return parsedDate\r\n}\r\n\r\nexport default convertDate\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  divBody: {\r\n    display: 'flex'\r\n  },\r\n  imagePlaceholder: {\r\n    backgroundColor: theme.colors.gray[1],\r\n    fontFamily: 'Poppins',\r\n    fontWeight: '500',\r\n    textTransform: 'uppercase'\r\n  },\r\n  divInfo: {\r\n    marginLeft: '15px',\r\n    fontWeight: '500',\r\n    fontSize: '12px',\r\n    lineHeight: '15px'\r\n  },\r\n  date: {\r\n    fontSize: '10px',\r\n    lineHeight: '12px',\r\n    fontFamily: 'Poppins',\r\n    color: theme.colors.gray[4]\r\n  },\r\n  title: {\r\n    fontFamily: 'Poppins',\r\n    fontSize: '12px',\r\n    marginBottom: '5px',\r\n    fontWeight: '500'\r\n  },\r\n  buttonDelete: {\r\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\r\n    '&:hover': {\r\n      backgroundColor: theme.colors.red[8],\r\n      color: theme.colors.red[0]\r\n    }\r\n  },\r\n  buttonDownload: {\r\n    marginRight: '10px',\r\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\r\n    '&:hover': {\r\n      backgroundColor: theme.colors.green[7],\r\n      color: theme.colors.green[0]\r\n    }\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { Image, Text } from '@mantine/core'\r\nimport GrayButton from '../GrayButton/GrayButton'\r\nimport convertDate from '../../utils/convertDate'\r\nimport useStyles from './style'\r\n\r\nexport type AttachmentType = {\r\n  itemUrl?: string\r\n  date: Date\r\n  fileName: string\r\n  id: string\r\n}\r\n\r\ntype AttachmentProps = AttachmentType & {\r\n  onDeleteHandler: (id: string) => void\r\n}\r\n\r\nconst Attachment = ({ itemUrl, date, fileName, id, onDeleteHandler }: AttachmentProps) => {\r\n  const { classes } = useStyles()\r\n\r\n  const attachmentDate = convertDate(date)\r\n  return (\r\n    <div className={classes.divBody}>\r\n      <div>\r\n        <Image\r\n          classNames={{ placeholder: classes.imagePlaceholder }}\r\n          src={itemUrl}\r\n          alt=\"Date\"\r\n          width={80}\r\n          height={55}\r\n          radius={8}\r\n          fit=\"cover\"\r\n          withPlaceholder\r\n          placeholder={<Text align=\"center\">{fileName[0] + (fileName[1] ? fileName[1] : '')}</Text>}\r\n        />\r\n      </div>\r\n      <div className={classes.divInfo}>\r\n        <Text className={classes.date}>{`Added ${attachmentDate}`}</Text>\r\n        <Text className={classes.title}>{fileName}</Text>\r\n        <GrayButton\r\n          component=\"a\"\r\n          href={itemUrl}\r\n          download\r\n          target=\"_blank\"\r\n          className={classes.buttonDownload}\r\n        >\r\n          Download\r\n        </GrayButton>\r\n        <GrayButton className={classes.buttonDelete} onClick={() => onDeleteHandler(id)}>\r\n          Delete\r\n        </GrayButton>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Attachment\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  attachmentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  title: {\r\n    color: theme.colors.gray[2],\r\n    fontFamily: theme.headings.fontFamily,\r\n    fontWeight: 600,\r\n    fontSize: '14px',\r\n    lineHeight: '15px',\r\n    margin: '0 6px'\r\n  },\r\n  grayBtn: {\r\n    marginLeft: '10px',\r\n    color: theme.colors.gray[6],\r\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\r\n    '&:hover': {\r\n      color: theme.colors.gray[0],\r\n      backgroundColor: theme.colors.gray[3]\r\n    }\r\n  },\r\n  attachmentSection: {\r\n    padding: '10px 0px'\r\n  }\r\n}))\r\nexport default useStyles\r\n","import { Text } from '@mantine/core'\r\nimport { FC } from 'react'\r\nimport { IoDocumentText } from 'react-icons/io5'\r\nimport { MdAdd } from 'react-icons/md'\r\nimport Attachment, { AttachmentType } from '../Attachment/Attachment'\r\nimport GrayButton from '../GrayButton/GrayButton'\r\nimport useStyles from './style'\r\n\r\nexport type AttachmentsListProps = {\r\n  attachments: AttachmentType[]\r\n  onAddHandler: (e?: React.MouseEvent<HTMLElement>) => void\r\n  onDeleteHandler: (id: string) => void\r\n}\r\n\r\nconst AttachmentsList: FC<AttachmentsListProps> = ({\r\n  attachments,\r\n  onAddHandler,\r\n  onDeleteHandler\r\n}) => {\r\n  const { classes } = useStyles()\r\n  return (\r\n    <>\r\n      <header className={classes.attachmentHeader}>\r\n        <IoDocumentText className={classes.title} />\r\n        <Text className={classes.title}>Attachments</Text>\r\n        <GrayButton\r\n          leftIcon={<MdAdd size={22} />}\r\n          onClick={onAddHandler}\r\n          className={classes.grayBtn}\r\n          radius={8}\r\n        >\r\n          Add\r\n        </GrayButton>\r\n      </header>\r\n      {attachments.map(({ fileName, date, itemUrl, id }) => (\r\n        <section className={classes.attachmentSection} key={id}>\r\n          <Attachment\r\n            fileName={fileName}\r\n            date={date}\r\n            itemUrl={itemUrl}\r\n            id={id}\r\n            onDeleteHandler={onDeleteHandler}\r\n          />\r\n        </section>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\nexport default AttachmentsList\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  divUserInfo: {\r\n    display: 'flex',\r\n    paddingTop: '5px',\r\n    marginBottom: '15px',\r\n    '& > *': {\r\n      marginRight: '14px'\r\n    }\r\n  },\r\n  divComment: {\r\n    marginBottom: '20px'\r\n  },\r\n  name: {\r\n    fontFamily: theme.other.secondaryFont,\r\n    fontSize: '12px',\r\n    fontWeight: '500'\r\n  },\r\n  date: {\r\n    fontSize: '10px',\r\n    color: theme.colors.gray[2]\r\n  },\r\n  divButtons: {\r\n    marginLeft: 'auto',\r\n    color: theme.colors.gray[9],\r\n    marginBottom: 'auto'\r\n  },\r\n  buttonSubtle: {\r\n    color: theme.colors.gray[9],\r\n    fontFamily: theme.other.secondaryFont,\r\n    fontSize: '10px',\r\n    fontWeight: '400',\r\n    '&: hover': {\r\n      backgroundColor: theme.colors.gray[0]\r\n    }\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { Button } from '@mantine/core'\r\nimport useStyles from './style'\r\n\r\nconst ButtonComment = ({ onClickEvent, children }) => {\r\n  const { classes } = useStyles()\r\n  return (\r\n    <Button\r\n      onClick={onClickEvent}\r\n      classNames={{ subtle: classes.buttonSubtle }}\r\n      variant=\"subtle\"\r\n      size=\"xs\"\r\n      compact\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\nexport default ButtonComment\r\n","import { useState } from 'react'\r\nimport { Avatar, Container, Textarea } from '@mantine/core'\r\nimport { getHotkeyHandler } from '@mantine/hooks'\r\nimport useStyles from './style'\r\nimport ButtonComment from './ButtonComment'\r\n\r\nconst Comment = ({ id, userData, textContent, date, onDeleteHandler, onEditHandler }) => {\r\n  const { classes } = useStyles()\r\n  const [editability, setEditability] = useState(true)\r\n  const [currentContent, setCurrentContent] = useState(textContent)\r\n\r\n  const newDate = date.toLocaleDateString('pl-PL', {\r\n    timeZone: 'CET',\r\n    month: 'long',\r\n    day: '2-digit',\r\n    year: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric'\r\n  })\r\n  return (\r\n    <Container>\r\n      <div className={classes.divUserInfo}>\r\n        <Avatar radius=\"md\" src={userData.profilePictureURL} />\r\n\r\n        <div>\r\n          <div className={classes.name}>{userData.username}</div>\r\n          <div className={classes.date}>{newDate}</div>\r\n        </div>\r\n\r\n        {editability ? (\r\n          <div className={classes.divButtons}>\r\n            <ButtonComment onClickEvent={() => setEditability(false)}>Edit</ButtonComment>\r\n            <span>-</span>\r\n            <ButtonComment onClickEvent={() => onDeleteHandler(id)}>Delete</ButtonComment>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.divButtons}>\r\n            <ButtonComment\r\n              onClickEvent={() => {\r\n                setEditability(true)\r\n                onEditHandler(id, currentContent)\r\n              }}\r\n            >\r\n              Save\r\n            </ButtonComment>\r\n            <span>-</span>\r\n            <ButtonComment onClickEvent={() => setEditability(true)}>Cancel</ButtonComment>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {editability ? (\r\n        <div className={classes.divComment}>{currentContent}</div>\r\n      ) : (\r\n        <div className={classes.divComment}>\r\n          <Textarea\r\n            defaultValue={currentContent}\r\n            onChange={(e) => {\r\n              setCurrentContent(e.target.value)\r\n            }}\r\n            onKeyDown={getHotkeyHandler([\r\n              [\r\n                'shift+Enter',\r\n                () => {\r\n                  setEditability(true)\r\n                  onEditHandler(id, currentContent)\r\n                }\r\n              ]\r\n            ])}\r\n          />\r\n        </div>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  commentMain: {\r\n    border: '1px solid',\r\n    borderColor: theme.colors.gray[2],\r\n    borderRadius: theme.radius.md,\r\n    padding: 4,\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  button: { alignSelf: 'end' }\r\n}))\r\n\r\nexport default useStyles\r\n","import { Button, Textarea } from '@mantine/core'\r\nimport { getHotkeyHandler } from '@mantine/hooks'\r\nimport useStyles from './style'\r\n\r\nconst CommentInput = ({ onValueChangedHandler, onSubmitHandler, value }) => {\r\n  const { classes } = useStyles()\r\n\r\n  return (\r\n    <div className={classes.commentMain}>\r\n      <Textarea\r\n        placeholder=\"Write a comment ...\"\r\n        variant=\"unstyled\"\r\n        size=\"md\"\r\n        onChange={(event) => onValueChangedHandler(event.target.value)}\r\n        value={value}\r\n        onKeyDown={getHotkeyHandler([['shift+Enter', onSubmitHandler]])}\r\n      />\r\n      <Button compact className={classes.button} onClick={onSubmitHandler}>\r\n        Save\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\nexport default CommentInput\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  outline: {\r\n    borderColor: theme.colors.gray[1],\r\n    borderRadius: 12,\r\n    padding: '5px'\r\n  },\r\n  searchBar: {\r\n    border: 'solid black 1px'\r\n  },\r\n  photoSearchText: {\r\n    fontWeight: 600,\r\n    fontFamily: theme.other.secondaryFont,\r\n    color: theme.colors.gray[8]\r\n  },\r\n  photoUnsplashText: {\r\n    color: theme.colors.gray[6],\r\n    marginBottom: 10\r\n  },\r\n  imageResults: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    '& > *': {\r\n      margin: 5\r\n    }\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { ActionIcon } from '@mantine/core'\r\nimport { BiSearchAlt2 } from 'react-icons/bi'\r\n\r\nconst ActionIconSearch = () => (\r\n  <ActionIcon variant=\"filled\" color=\"blue\" radius=\"md\" size=\"sm\">\r\n    <BiSearchAlt2 />\r\n  </ActionIcon>\r\n)\r\n\r\nexport default ActionIconSearch\r\n","import { Button } from '@mantine/core'\r\n\r\nconst SearchButton = () => (\r\n  <Button variant=\"filled\" color=\"blue\" radius=\"md\" size=\"sm\">\r\n    Search\r\n  </Button>\r\n)\r\n\r\nexport default SearchButton\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  input: {\r\n    borderWidth: 0\r\n  },\r\n  wrapper: {\r\n    height: '34px',\r\n    boxShadow: '0px 4px 12px 0px #0000001A'\r\n  },\r\n  buttonRightSection: {\r\n    width: 83,\r\n    margin: '2px 2px 2px 0',\r\n\r\n    '& button': {\r\n      height: '34px'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import type { ElementType, ChangeEvent } from 'react'\r\nimport { Input, InputProps } from '@mantine/core'\r\n\r\nimport ActionIconSearch from './ActionIconSearch'\r\nimport SearchButton from './SearchButton'\r\nimport useStyles from './styles'\r\n\r\nexport type SearchBarProps = InputProps<ElementType> & {\r\n  onKeywordChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n  actionType: 'button' | 'icon'\r\n}\r\n\r\nconst SearchBar = ({\r\n  radius = 'md',\r\n  size = 'xs',\r\n  placeholder = 'Keywords...',\r\n  onKeywordChangeHandler,\r\n  actionType,\r\n  ...restProps\r\n}: SearchBarProps) => {\r\n  const { classes } = useStyles()\r\n\r\n  return (\r\n    <Input\r\n      classNames={{\r\n        input: classes.input,\r\n        wrapper: classes.wrapper,\r\n        rightSection: actionType === 'button' ? classes.buttonRightSection : ''\r\n      }}\r\n      radius={radius}\r\n      size={size}\r\n      placeholder={placeholder}\r\n      rightSection={actionType === 'icon' ? <ActionIconSearch /> : <SearchButton />}\r\n      onChange={onKeywordChangeHandler}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","import { Avatar, Input, Text } from '@mantine/core'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport useStyles from './style'\r\nimport { IMAGE_API_PROVIDER_URL, IMAGE_API_IMAGES_PER_PAGE } from '../../config'\r\nimport { debounce } from '../../utils/functions'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\n\r\nexport const pickerImagesSizes = {\r\n  full: 'full',\r\n  raw: 'raw',\r\n  regular: 'regular',\r\n  small: 'small',\r\n  thumb: 'thumb'\r\n}\r\n\r\nconst ImagePicker = ({ imageSize, onImageSelectedHandler }) => {\r\n  const { classes } = useStyles()\r\n  const [images, setImages] = useState([])\r\n\r\n  const getPhotos = (event) => {\r\n    const { value } = event.target\r\n    fetch(\r\n      `${IMAGE_API_PROVIDER_URL}?client_id=${process.env.REACT_APP_UNSPLASH_API_KEY}&query=${value}&per_page=${IMAGE_API_IMAGES_PER_PAGE}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((json) => setImages(json.results))\r\n      // eslint-disable-next-line no-console\r\n      .catch((err) => console.error(err))\r\n  }\r\n  const onKeywordChangeHandler = debounce(getPhotos)\r\n\r\n  return (\r\n    <div className={classes.outline}>\r\n      <Text size=\"sm\">Photo Search</Text>\r\n      <Text className={classes.photoUnsplashText} size=\"sm\">\r\n        Search unsplash for photos\r\n      </Text>\r\n      <SearchBar onKeywordChangeHandler={onKeywordChangeHandler} actionType=\"button\" />\r\n      <div className={classes.imageResults}>\r\n        {images.map((imageLink) => (\r\n          <Avatar\r\n            key={imageLink.id}\r\n            radius=\"md\"\r\n            size=\"lg\"\r\n            src={imageLink.urls.thumb}\r\n            onClick={() => onImageSelectedHandler(imageLink.urls[imageSize])}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nImagePicker.propTypes = {\r\n  imageSize: PropTypes.oneOf(Object.values(pickerImagesSizes)),\r\n  onImageSelectedHandler: PropTypes.func\r\n}\r\nexport default ImagePicker\r\n","export const debounce = (func) => {\r\n  let timer\r\n  return (args) => {\r\n    clearTimeout(timer)\r\n    timer = setTimeout(() => func(args), 300)\r\n  }\r\n}\r\n","export const IMAGE_API_PROVIDER_URL = 'https://api.unsplash.com/search/photos/'\r\nexport const IMAGE_API_IMAGES_PER_PAGE = 12\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  RedButton: {\r\n    color: theme.colors.red[6],\r\n    fontFamily: theme.headings.fontFamily,\r\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\r\n    '&:hover': {\r\n      color: '#FFF',\r\n      backgroundColor: theme.fn.darken(theme.colors.red[6], 0.1)\r\n    },\r\n    padding: '0 clamp(2px, 1vw, 18px)'\r\n  },\r\n  title: {\r\n    color: theme.colors.gray[2],\r\n    fontFamily: 'Poppins',\r\n    fontWeight: 600,\r\n    fontSize: '16px',\r\n    lineHeight: '15px',\r\n    margin: '0 10px'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { Button } from '@mantine/core'\r\nimport useStyles from './style'\r\n\r\ntype RedButtonProps = {\r\n  children?: string\r\n  onClick: (e?: React.MouseEvent<HTMLElement>) => void\r\n  rightIcon?: React.ReactNode\r\n}\r\n\r\nconst RedButton = ({ children, onClick, rightIcon }: RedButtonProps) => {\r\n  const { classes } = useStyles()\r\n  return (\r\n    <Button\r\n      radius=\"md\"\r\n      onClick={onClick}\r\n      variant=\"outline\"\r\n      color=\"red\"\r\n      rightIcon={rightIcon}\r\n      className={classes.RedButton}\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\nexport default RedButton\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  membersListHeader: {\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    color: theme.colors.gray[2],\r\n    fontFamily: theme.headings.fontFamily,\r\n    fontWeight: 600,\r\n    fontSize: '14px',\r\n    lineHeight: '15px',\r\n    margin: '0 6px'\r\n  },\r\n  memberSection: {\r\n    display: 'grid',\r\n    alignItems: 'center',\r\n    gridTemplateColumns: '38px 5fr 2fr',\r\n    padding: '5px'\r\n  },\r\n  username: {\r\n    fontFamily: theme.headings.fontFamily,\r\n    fontWeight: 600,\r\n    color: theme.colors.gray[9],\r\n    width: '100%',\r\n    margin: '0 10px'\r\n  },\r\n  admin: {\r\n    textAlign: 'center',\r\n    color: theme.colors.gray[6],\r\n    fontWeight: 600\r\n  }\r\n}))\r\nexport default useStyles\r\n","import { Text } from '@mantine/core'\r\nimport { HiUsers } from 'react-icons/hi'\r\nimport UserIcon from '../UserIcon/UserIcon'\r\nimport RedButton from '../RedButton/RedButton'\r\nimport useStyles from './style'\r\nimport { RandomUserType } from '../../logic/randomUser'\r\n\r\ntype MembersListProps = {\r\n  title?: string\r\n  membersList: RandomUserType[]\r\n  onDeleteHandler: (id: string) => void\r\n  isDeletable?: boolean\r\n}\r\n\r\nconst MembersList = ({ membersList, onDeleteHandler, isDeletable, title }: MembersListProps) => {\r\n  const { classes } = useStyles()\r\n  function showButtons(role: string | undefined, id: string) {\r\n    if (isDeletable) {\r\n      if (role === 'Admin') {\r\n        return <Text className={classes.admin}>Admin</Text>\r\n      }\r\n      return <RedButton onClick={() => onDeleteHandler(id)}>Remove</RedButton>\r\n    }\r\n    return undefined\r\n  }\r\n  return (\r\n    <div>\r\n      <header className={classes.membersListHeader}>\r\n        <HiUsers className={classes.title} />\r\n        <Text className={classes.title}>{title || 'Members'}</Text>\r\n      </header>\r\n      <section>\r\n        {membersList.map(({ username, id, profilePictureURL, role }) => (\r\n          <section className={classes.memberSection} key={id}>\r\n            <UserIcon imgUrl={profilePictureURL} username={username} />\r\n            <Text className={classes.username}>{username}</Text>\r\n            {showButtons(role, id)}\r\n          </section>\r\n        ))}\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\nexport default MembersList\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  memberCard: {\r\n    borderRadius: '12px',\r\n    padding: '10px',\r\n    width: '300px',\r\n    borderColor: theme.colors.gray[1],\r\n    boxShadow: '0px 2px 4px #0000000F'\r\n  },\r\n  memberCardTitle: {\r\n    fontWeight: 600,\r\n    color: theme.colors.gray[9]\r\n  },\r\n  memberCardDescription: {\r\n    marginBottom: '10px',\r\n    color: theme.colors.gray[2]\r\n  },\r\n  memberCardInput: {\r\n    filter: 'drop-shadow(0px 4px 12px rgba(0, 0, 0, 0.1))'\r\n  },\r\n  usersContainer: {\r\n    borderRadius: '12px',\r\n    border: `1px solid ${theme.colors.gray[1]}`,\r\n    margin: '10px 0',\r\n    filter: 'drop-shadow(0px 4px 12px rgba(0, 0, 0, 0.1))',\r\n    overflow: 'hidden'\r\n  },\r\n  memberContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '8px',\r\n    width: '100%',\r\n    transition: 'all 0.2s ease-in-out',\r\n    '&:hover': {\r\n      backgroundColor: theme.colors.gray[1]\r\n    }\r\n  },\r\n  user: {\r\n    marginLeft: '6px',\r\n    color: theme.colors.gray[9]\r\n  },\r\n  selectedUser: {\r\n    backgroundColor: theme.colors.blue[4],\r\n    '&:hover': {\r\n      backgroundColor: theme.colors.blue[5]\r\n    }\r\n  },\r\n  icon: {\r\n    marginRight: '4px'\r\n  }\r\n}))\r\nexport default useStyles\r\n","import { useState } from 'react'\r\nimport { Button, Input, Text, ActionIcon, Center, UnstyledButton } from '@mantine/core'\r\nimport { AiOutlineSearch } from 'react-icons/ai'\r\nimport useStyles from './style'\r\nimport UserIcon from '../UserIcon/UserIcon'\r\nimport { RandomUserType } from '../../logic/randomUser'\r\n\r\ntype MemberCardContainerProps = {\r\n  membersList: RandomUserType[]\r\n  addUserHandler: (selectedUsers: string[]) => void\r\n}\r\n\r\nconst MemberCardContainer = ({ membersList, addUserHandler }: MemberCardContainerProps) => {\r\n  const { classes } = useStyles()\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([])\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.target.value)\r\n  }\r\n  const results = !searchTerm\r\n    ? membersList\r\n    : membersList.filter(({ username }) =>\r\n        username.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n  function handleMemberClick(id: string) {\r\n    const index = selectedUsers.indexOf(id)\r\n    if (index > -1) {\r\n      setSelectedUsers((prevSelectedUsers) =>\r\n        prevSelectedUsers.filter((prevUserId) => prevUserId !== id)\r\n      )\r\n    } else {\r\n      setSelectedUsers((prevSelectedUsers) => [...prevSelectedUsers, id])\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.memberCard}>\r\n      <Text className={classes.memberCardTitle}>Members</Text>\r\n      <Text className={classes.memberCardDescription}>Assign members to this card</Text>\r\n      <Input\r\n        className={classes.memberCardInput}\r\n        placeholder=\"User...\"\r\n        radius=\"md\"\r\n        rightSectionWidth={30}\r\n        value={searchTerm}\r\n        onChange={handleChange}\r\n        rightSection={\r\n          <ActionIcon radius=\"md\" variant=\"filled\" color=\"blue\" className={classes.icon}>\r\n            <AiOutlineSearch />\r\n          </ActionIcon>\r\n        }\r\n      />\r\n      <section className={classes.usersContainer}>\r\n        {results.slice(0, 4).map(({ username, profilePictureURL, id }) => (\r\n          <UnstyledButton\r\n            className={\r\n              selectedUsers.indexOf(id) + 1\r\n                ? `${classes.memberContainer} ${classes.selectedUser}`\r\n                : classes.memberContainer\r\n            }\r\n            key={id}\r\n            onClick={() => handleMemberClick(id)}\r\n          >\r\n            <UserIcon imgUrl={profilePictureURL} username={username} />\r\n            <Text className={classes.user} weight={600}>\r\n              {username}\r\n            </Text>\r\n          </UnstyledButton>\r\n        ))}\r\n      </section>\r\n      <Center>\r\n        <Button\r\n          radius=\"md\"\r\n          onClick={() => {\r\n            addUserHandler(selectedUsers)\r\n            setSelectedUsers([])\r\n          }}\r\n        >\r\n          Invite\r\n        </Button>\r\n      </Center>\r\n    </div>\r\n  )\r\n}\r\nexport default MemberCardContainer\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.colors.gray[0],\r\n    color: theme.colors.gray[6],\r\n    fontSize: '14px',\r\n    lineHeight: '18px',\r\n    maxWidth: '100%',\r\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\r\n    '&:hover': {\r\n      color: '#FFF',\r\n      backgroundColor: theme.fn.darken(theme.colors.gray[0], 0.2)\r\n    }\r\n  },\r\n  inner: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-start'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { Button } from '@mantine/core'\r\nimport useStyles from './style'\r\n\r\ntype GrayButtonFilledProps = {\r\n  children?: string\r\n  onClick: (e?: React.MouseEvent<HTMLElement>) => void\r\n  rightIcon?: React.ReactNode\r\n  leftIcon?: React.ReactNode\r\n}\r\n\r\nconst GrayButtonFilled = ({ children, onClick, rightIcon, leftIcon }: GrayButtonFilledProps) => {\r\n  const { classes } = useStyles()\r\n  return (\r\n    <Button\r\n      radius=\"md\"\r\n      onClick={onClick}\r\n      leftIcon={leftIcon}\r\n      classNames={{ root: classes.root, inner: classes.inner }}\r\n      rightIcon={rightIcon}\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\nexport default GrayButtonFilled\r\n","import faker from '@faker-js/faker'\r\n\r\nexport type GenerateAttachmentType = {\r\n  fileName: string\r\n\r\n  itemUrl: string\r\n\r\n  date: Date\r\n\r\n  id: string\r\n}\r\n\r\nclass GenerateAttachment {\r\n  private fileName!: string\r\n\r\n  private itemUrl!: string\r\n\r\n  private date: Date\r\n\r\n  private id: string\r\n\r\n  constructor() {\r\n    this.generateAttachment()\r\n    this.date = faker.date.past()\r\n    this.id = faker.datatype.uuid()\r\n  }\r\n\r\n  get getAttachment() {\r\n    return {\r\n      fileName: this.fileName,\r\n      itemUrl: this.itemUrl,\r\n      date: this.date,\r\n      id: this.id\r\n    }\r\n  }\r\n\r\n  private generateAttachment() {\r\n    const isAttachmentWithImage = Math.random() > 0.5\r\n    if (isAttachmentWithImage) {\r\n      this.fileName = faker.system.commonFileName('jpg')\r\n      this.itemUrl = `https://picsum.photos/seed/${this.fileName}/300/200`\r\n    } else {\r\n      const url = faker.internet.url()\r\n      this.fileName = faker.system.fileName()\r\n      this.itemUrl = `${url}/${this.fileName}`\r\n    }\r\n  }\r\n}\r\n\r\nexport default GenerateAttachment\r\n","import faker from '@faker-js/faker'\r\n\r\nexport type RandomUserType = {\r\n  id: string\r\n\r\n  username: string\r\n\r\n  role: string\r\n\r\n  profilePictureURL: string\r\n}\r\n\r\nclass RandomUser {\r\n  private readonly id: string\r\n\r\n  private readonly username: string\r\n\r\n  private readonly role: string\r\n\r\n  private readonly profilePictureURL: string\r\n\r\n  constructor() {\r\n    this.username = `${faker.name.firstName()} ${faker.name.lastName()}`\r\n    this.id = faker.datatype.uuid()\r\n    this.role = RandomUser.generateRole()\r\n    this.profilePictureURL = `https://avatars.dicebear.com/api/human/${this.id}.svg`\r\n  }\r\n\r\n  get userData() {\r\n    return {\r\n      username: this.username,\r\n      id: this.id,\r\n      role: this.role,\r\n      profilePictureURL: this.profilePictureURL\r\n    }\r\n  }\r\n\r\n  private static generateRole() {\r\n    const num = parseInt(String(Math.random() * 10), 10)\r\n    if (num === 5) {\r\n      return 'Admin'\r\n    }\r\n    return 'User'\r\n  }\r\n}\r\n\r\nexport default RandomUser\r\n","import faker from '@faker-js/faker'\r\nimport RandomUser, { RandomUserType } from './randomUser'\r\n\r\nexport type GenerateCommentType = {\r\n  id: string\r\n\r\n  userData: RandomUserType\r\n\r\n  textContent: string\r\n\r\n  date: Date\r\n}\r\n\r\nclass GenerateComment {\r\n  private readonly id: string\r\n\r\n  private readonly userData: RandomUserType\r\n\r\n  private readonly textContent: string\r\n\r\n  private readonly date: Date\r\n\r\n  constructor() {\r\n    this.id = faker.datatype.uuid()\r\n    this.userData = new RandomUser().userData\r\n    this.textContent = faker.lorem.lines(3)\r\n    this.date = faker.date.past()\r\n  }\r\n\r\n  get getComment() {\r\n    return {\r\n      id: this.id,\r\n      userData: this.userData,\r\n      textContent: this.textContent,\r\n      date: this.date\r\n    }\r\n  }\r\n}\r\nexport default GenerateComment\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  modal: {\r\n    padding: 20\r\n  },\r\n  modalTitle: {\r\n    margin: 0\r\n  },\r\n  container: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '7fr 3fr',\r\n    gridGap: '2em'\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    top: 10,\r\n    right: 10,\r\n    width: 32,\r\n    height: 32,\r\n    padding: 0,\r\n    color: 'white',\r\n    backgroundColor: '#1a64db',\r\n    '&:hover': {\r\n      backgroundColor: theme.colors.red[6]\r\n    }\r\n  },\r\n  column: {\r\n    width: '100%'\r\n  },\r\n  sidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '1em',\r\n    width: '100%'\r\n  },\r\n  sidebarHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: '5px'\r\n  },\r\n  sectionTitle: {\r\n    color: theme.colors.gray[2],\r\n    fontFamily: theme.headings.fontFamily,\r\n    fontWeight: 600,\r\n    fontSize: '14px',\r\n    lineHeight: '15px',\r\n    margin: '0 6px'\r\n  },\r\n  actionSection: {\r\n    marginTop: 2,\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  title: {\r\n    fontSize: '18px'\r\n  },\r\n  coverImage: {\r\n    height: 130,\r\n    width: '100%',\r\n    objectFit: 'cover',\r\n    borderRadius: 20,\r\n    marginBottom: 10\r\n  },\r\n  popTarget: {\r\n    width: '100%'\r\n  },\r\n  cont: {\r\n    height: '100vh'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { useState } from 'react'\r\nimport { Popover, Modal, Text } from '@mantine/core'\r\nimport { AiOutlinePlus, IoMdContact, MdImage } from 'react-icons/all'\r\n\r\n// Components\r\nimport Description from '../Description/Description'\r\nimport AttachmentsList from '../AttachmentsList/AttachmentsList'\r\nimport Comment from '../Comment/Comment'\r\nimport CommentInput from '../CommentInput/CommentInput'\r\nimport ImagePicker, { pickerImagesSizes } from '../ImagePicker/ImagePicker'\r\nimport MembersList from '../MembersList/MembersList'\r\nimport MemberCardContainer from '../MemberCardContainer/MemberCardContainer'\r\nimport BlueBtn from '../BlueBtn/BlueBtn'\r\nimport GrayButtonFilled from '../GrayButtonFilled/GrayButtonFilled'\r\n\r\n// Logic\r\nimport GenerateAttachment, { GenerateAttachmentType } from '../../logic/generateAttachment'\r\nimport GenerateComment, { GenerateCommentType } from '../../logic/generateComment'\r\nimport { RandomUserType } from '../../logic/randomUser'\r\nimport { GenerateTaskType } from '../../logic/generateTask'\r\n\r\nimport useStyles from './style'\r\n\r\ntype TaskModalProps = {\r\n  isOpen: boolean\r\n  task: GenerateTaskType\r\n  membersList: RandomUserType[]\r\n  commentsList: GenerateCommentType[]\r\n  onCloseHandler: (task: GenerateTaskType & { comments: GenerateCommentType[] }) => void\r\n}\r\n\r\nconst TaskModal = ({ isOpen, task, commentsList, membersList, onCloseHandler }: TaskModalProps) => {\r\n  const { classes } = useStyles()\r\n  const [currentDescription, setCurrentDescription] = useState(task.description)\r\n  const [currentAttachments, setCurrentAttachments] = useState(task.attachment)\r\n  const [currentCoverImageURL, setCurrentCoverImageURL] = useState(task.imageCoverURL)\r\n  const [currentAssigneesList, setCurrentAssigneesList] = useState(task.assigneeList)\r\n  const [currentComments, setCurrentComments] = useState(commentsList)\r\n  const [currentInputComment, setCurrentInputComment] = useState('')\r\n  const [visibleImagePicker, setVisibleImagePicker] = useState(false)\r\n  const [visibleMemberList, setVisibleMemberList] = useState(false)\r\n  const [currentMemberList, setCurrentMemberList] = useState(membersList)\r\n\r\n  const attachmentOnAddHandler = () => {\r\n    const newAttachment: GenerateAttachmentType = new GenerateAttachment().getAttachment\r\n    setCurrentAttachments((prevState: GenerateAttachmentType[]) => [...prevState, newAttachment])\r\n  }\r\n\r\n  const attachmentOnDeleteHandler = (deleteId: string) => {\r\n    setCurrentAttachments((prevCurrentAttachments) =>\r\n      prevCurrentAttachments.filter(({ id }) => id !== deleteId)\r\n    )\r\n  }\r\n\r\n  const commentOnDeleteHandler = (deleteId: string) => {\r\n    setCurrentComments((prevCurrentComments) =>\r\n      prevCurrentComments.filter(({ id }) => id !== deleteId)\r\n    )\r\n  }\r\n\r\n  const onCloseModalWindowHandler = () => {\r\n    onCloseHandler({\r\n      id: task.id,\r\n      imageCoverURL: currentCoverImageURL,\r\n      title: task.title,\r\n      description: currentDescription,\r\n      attachment: currentAttachments,\r\n      assigneeList: currentAssigneesList,\r\n      comments: currentComments\r\n    })\r\n  }\r\n\r\n  const handleCommentEdit = (editedId: string, editedText: string) => {\r\n    const editedCommentIndex = currentComments.findIndex(({ id }) => id === editedId)\r\n    if (editedCommentIndex !== -1) {\r\n      const newComments = [...currentComments]\r\n      newComments[editedCommentIndex] = {\r\n        ...newComments[editedCommentIndex],\r\n        textContent: editedText\r\n      }\r\n      setCurrentComments(newComments)\r\n    }\r\n  }\r\n\r\n  const onSubmitCommentInputHandler = () => {\r\n    if (currentInputComment !== '') {\r\n      const fakeComment = new GenerateComment().getComment\r\n      fakeComment.textContent = currentInputComment\r\n      fakeComment.date = new Date()\r\n      setCurrentComments((prevState) => [...prevState, fakeComment])\r\n      setCurrentInputComment('')\r\n    }\r\n  }\r\n\r\n  const onImagePickerHandler = (val: string) => {\r\n    setCurrentCoverImageURL(val)\r\n  }\r\n\r\n  const addUserHandler = (selectedUsersID: string[]) => {\r\n    const newAssignees = selectedUsersID\r\n      .map((selectedUserID) => currentMemberList.find(({ id }) => id === selectedUserID))\r\n      .filter((assignee) => assignee) as RandomUserType[]\r\n    setCurrentAssigneesList((prevState) => [...prevState, ...newAssignees])\r\n    setCurrentMemberList((prevState) =>\r\n      prevState.filter((member) => !selectedUsersID.some((selectedId) => selectedId === member.id))\r\n    )\r\n  }\r\n\r\n  const onAssigneesListDeleteHandler = (deletedID: string) => {\r\n    const editedCommentIndex = currentAssigneesList.findIndex(({ id }) => id === deletedID)\r\n    if (editedCommentIndex !== -1) {\r\n      const newAssigneesList = [...currentAssigneesList]\r\n      newAssigneesList.splice(editedCommentIndex, 1)\r\n      setCurrentAssigneesList(newAssigneesList)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className={classes.modal}\r\n      classNames={{ close: classes.closeButton, header: classes.modalTitle }}\r\n      opened={isOpen}\r\n      onClose={onCloseModalWindowHandler}\r\n      centered\r\n      overflow=\"inside\"\r\n      size=\"clamp(1000px, 70%, 2000px)\"\r\n    >\r\n      {currentCoverImageURL ? (\r\n        <img src={currentCoverImageURL} className={classes.coverImage} alt=\"Cover\" />\r\n      ) : null}\r\n      <section className={classes.container}>\r\n        <div className={classes.column}>\r\n          <Text className={classes.title}>{task.title}</Text>\r\n          <Description\r\n            initialText={currentDescription}\r\n            onTextSavedHandler={(descriptionText: string) => setCurrentDescription(descriptionText)}\r\n          />\r\n          <AttachmentsList\r\n            attachments={currentAttachments}\r\n            onAddHandler={attachmentOnAddHandler}\r\n            onDeleteHandler={attachmentOnDeleteHandler}\r\n          />\r\n          <CommentInput\r\n            onValueChangedHandler={setCurrentInputComment}\r\n            onSubmitHandler={onSubmitCommentInputHandler}\r\n            value={currentInputComment}\r\n          />\r\n          {currentComments.map(({ textContent, date, userData, id }) => (\r\n            <Comment\r\n              textContent={textContent}\r\n              date={date}\r\n              userData={userData}\r\n              id={id}\r\n              key={id}\r\n              onDeleteHandler={commentOnDeleteHandler}\r\n              onEditHandler={handleCommentEdit}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className={classes.sidebar}>\r\n          <section className={classes.actionSection}>\r\n            <header className={classes.sidebarHeader}>\r\n              <IoMdContact className={classes.sectionTitle} />\r\n              <Text className={classes.sectionTitle}>Actions</Text>\r\n            </header>\r\n            <Popover\r\n              opened={visibleImagePicker}\r\n              onClose={() => setVisibleImagePicker(false)}\r\n              target={\r\n                <GrayButtonFilled\r\n                  onClick={() => setVisibleImagePicker((prevState: boolean) => !prevState)}\r\n                  leftIcon={<MdImage />}\r\n                >\r\n                  Cover\r\n                </GrayButtonFilled>\r\n              }\r\n              position=\"bottom\"\r\n              placement=\"start\"\r\n              width={300}\r\n              spacing={0}\r\n              radius=\"md\"\r\n              classNames={{ target: classes.popTarget }}\r\n            >\r\n              <ImagePicker\r\n                imageSize={pickerImagesSizes.regular}\r\n                onImageSelectedHandler={onImagePickerHandler}\r\n              />\r\n            </Popover>\r\n          </section>\r\n          <MembersList\r\n            membersList={currentAssigneesList}\r\n            onDeleteHandler={onAssigneesListDeleteHandler}\r\n            isDeletable\r\n          />\r\n          <Popover\r\n            opened={visibleMemberList}\r\n            onClose={() => setVisibleMemberList(false)}\r\n            target={\r\n              <BlueBtn\r\n                onClick={() => setVisibleMemberList((prevState: boolean) => !prevState)}\r\n                rightIcon={<AiOutlinePlus />}\r\n              >\r\n                Assign a member\r\n              </BlueBtn>\r\n            }\r\n            position=\"bottom\"\r\n            placement=\"start\"\r\n            width={300}\r\n            spacing={0}\r\n            radius=\"md\"\r\n          >\r\n            <MemberCardContainer membersList={currentMemberList} addUserHandler={addUserHandler} />\r\n          </Popover>\r\n        </div>\r\n      </section>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TaskModal\r\n","import faker from '@faker-js/faker'\r\n\r\nclass GenerateId {\r\n  private id: string\r\n\r\n  constructor() {\r\n    this.id = faker.datatype.uuid()\r\n  }\r\n\r\n  get getId() {\r\n    return this.id\r\n  }\r\n}\r\n\r\nexport default GenerateId\r\n","class GenerateImage {\r\n  private image: string\r\n\r\n  constructor(id: string) {\r\n    this.image = `https://picsum.photos/seed/${id}/300/200`\r\n  }\r\n\r\n  get getImage() {\r\n    return this.image\r\n  }\r\n}\r\n\r\nexport default GenerateImage\r\n","import faker from '@faker-js/faker'\r\nimport GenerateAttachment, { GenerateAttachmentType } from './generateAttachment'\r\nimport { RandomUserType } from './randomUser'\r\nimport GenerateId from './generateId'\r\nimport GenerateImage from './generateImage'\r\n\r\nexport type GenerateTaskType = {\r\n  id: string\r\n  imageCoverURL: string | null\r\n  title: string\r\n  description: string\r\n  attachment: GenerateAttachmentType[]\r\n  assigneeList: RandomUserType[]\r\n}\r\n\r\nclass GenerateTask {\r\n  private id: string\r\n\r\n  private imageCoverURL: string | null\r\n\r\n  private listOfUsers: RandomUserType[]\r\n\r\n  private title: string\r\n\r\n  private description: string\r\n\r\n  private attachment: GenerateAttachmentType[]\r\n\r\n  private assigneeList: RandomUserType[]\r\n\r\n  constructor(ListOfUsers: RandomUserType[]) {\r\n    this.id = new GenerateId().getId\r\n    this.listOfUsers = ListOfUsers\r\n    this.title = faker.lorem.sentence()\r\n    this.description = faker.lorem.paragraph()\r\n    this.attachment = [new GenerateAttachment().getAttachment]\r\n    this.assigneeList = this.getAssigneeList()\r\n    this.imageCoverURL = this.getImageCover()\r\n  }\r\n\r\n  private getAssigneeList() {\r\n    const randomList = faker.helpers.shuffle(this.listOfUsers)\r\n    const numberOfAssignee = Math.floor(Math.random() * (this.listOfUsers.length - 1)) + 1\r\n    const assigneeList = []\r\n    for (let i = 0; i < numberOfAssignee; i += 1) {\r\n      assigneeList.push(randomList[i])\r\n    }\r\n    return assigneeList\r\n  }\r\n\r\n  private getImageCover() {\r\n    const isImageCover = Math.random() > 0.5\r\n    if (isImageCover) {\r\n      return new GenerateImage(this.id).getImage\r\n    }\r\n    return null\r\n  }\r\n\r\n  get taskData() {\r\n    return {\r\n      id: this.id,\r\n      title: this.title,\r\n      description: this.description,\r\n      attachment: this.attachment,\r\n      assigneeList: this.assigneeList,\r\n      imageCoverURL: this.imageCoverURL\r\n    }\r\n  }\r\n}\r\n\r\nexport default GenerateTask\r\n","import faker from '@faker-js/faker'\r\nimport GenerateTask from './generateTask'\r\nimport RandomUser from './randomUser'\r\n\r\nlet listOfUsers = new Array(10).fill(0).map(() => new RandomUser().userData)\r\n\r\nconst normalUsers = listOfUsers.filter((user) => user.role !== 'Admin')\r\nconst admins = listOfUsers.filter((user) => user.role === 'Admin')\r\n\r\nif (admins.length === 0) {\r\n  listOfUsers[0].role = 'Admin'\r\n} else {\r\n  listOfUsers = [...normalUsers, admins[0]]\r\n}\r\n\r\nconst PP = () => {\r\n  if (Math.random() > 0.5) {\r\n    return 'Private'\r\n  }\r\n  return 'Public'\r\n}\r\n\r\nconst GenerateBoard = {\r\n  columns: [\r\n    {\r\n      id: '11',\r\n      title: 'Backlog',\r\n      tasks: [new GenerateTask(listOfUsers).taskData, new GenerateTask(listOfUsers).taskData]\r\n    },\r\n    {\r\n      id: '2',\r\n      title: 'To do',\r\n      tasks: [new GenerateTask(listOfUsers).taskData]\r\n    },\r\n    {\r\n      id: '3',\r\n      title: 'In progress',\r\n      tasks: [\r\n        new GenerateTask(listOfUsers).taskData,\r\n        new GenerateTask(listOfUsers).taskData,\r\n        new GenerateTask(listOfUsers).taskData\r\n      ]\r\n    },\r\n\r\n    {\r\n      id: '4',\r\n      title: 'Done',\r\n      tasks: [new GenerateTask(listOfUsers).taskData]\r\n    },\r\n    {\r\n      id: '5',\r\n      tasks: []\r\n    }\r\n  ],\r\n  users: listOfUsers,\r\n  status: PP(),\r\n  title: faker.lorem.sentence(4, 9),\r\n  description: faker.lorem.sentence(4, 9),\r\n  createdOn: faker.date.past()\r\n}\r\n\r\nexport default GenerateBoard\r\n","import React from 'react'\r\nimport GenerateBoard from '../logic/generateBoard'\r\nimport GenerateImage from '../logic/generateImage'\r\n\r\nexport type IDashboardsContext = [any[], (dashboards: any[]) => void]\r\n\r\nconst board1 = GenerateBoard\r\nconst board2 = GenerateBoard\r\nconst board3 = GenerateBoard\r\n\r\nexport const dashboardsDefaultValue = [\r\n  {\r\n    id: '1',\r\n    imageCoverUrl: new GenerateImage('1').getImage,\r\n    description: board1.description,\r\n    status: board1.status,\r\n    title: board1.title,\r\n    createdAt: board1.createdOn,\r\n    admin: 'userId',\r\n    columns: board1.columns,\r\n    users: board1.users\r\n  },\r\n  {\r\n    id: '2',\r\n    imageCoverUrl: new GenerateImage('2').getImage,\r\n    description: board2.description,\r\n    status: board2.status,\r\n    title: board2.title,\r\n    createdAt: board2.createdOn,\r\n    admin: 'userId',\r\n    columns: board2.columns,\r\n    users: board2.users\r\n  },\r\n  {\r\n    id: '3',\r\n    imageCoverUrl: new GenerateImage('3').getImage,\r\n    description: board3.description,\r\n    status: board3.status,\r\n    title: board3.title,\r\n    createdAt: board3.createdOn,\r\n    admin: 'userId',\r\n    columns: board3.columns,\r\n    users: board3.users\r\n  }\r\n]\r\n\r\nexport const DashboardsContext = React.createContext<IDashboardsContext>([\r\n  dashboardsDefaultValue,\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  () => {}\r\n])\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  drawer: {\r\n    padding: '20px 5px 20px 20px'\r\n  },\r\n  drawerHeader: {\r\n    marginBottom: 4\r\n  },\r\n  authorHeader: {\r\n    display: 'flex'\r\n  },\r\n  authorSection: {\r\n    margin: '6px 0',\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    gap: 10\r\n  },\r\n  authorInfo: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    fontFamily: theme.headings.fontFamily,\r\n    fontWeight: 600,\r\n    color: theme.colors.gray[9],\r\n    fontSize: '14px',\r\n    margin: 0\r\n  },\r\n  title: {\r\n    color: theme.colors.gray[2],\r\n    fontFamily: theme.headings.fontFamily,\r\n    fontWeight: 600,\r\n    fontSize: '14px',\r\n    lineHeight: '15px',\r\n    margin: '0 6px'\r\n  },\r\n  date: {\r\n    color: theme.colors.gray[2],\r\n    fontFamily: theme.headings.fontFamily,\r\n    fontWeight: 600,\r\n    fontSize: '12px',\r\n    margin: 0\r\n  },\r\n  divider: {\r\n    marginBottom: 10\r\n  },\r\n  scrollArea: {\r\n    paddingRight: 15\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { Drawer, Divider, Text, ScrollArea } from '@mantine/core'\r\nimport { FaUser } from 'react-icons/all'\r\n\r\n// Components\r\nimport Description from '../Description/Description'\r\nimport MembersList from '../MembersList/MembersList'\r\n\r\n// Logic\r\nimport { RandomUserType } from '../../logic/randomUser'\r\nimport convertDate from '../../utils/convertDate'\r\n\r\nimport useStyles from './style'\r\nimport UserIcon from '../UserIcon/UserIcon'\r\n\r\ntype DashboardDrawerProps = {\r\n  title: string\r\n  description: string\r\n  creationDate: Date\r\n  membersList: RandomUserType[]\r\n  isAdmin: boolean\r\n  isOpen: boolean\r\n  setIsOpen: () => void\r\n  onDescriptionSaveHandler: (descriptionText: string) => void\r\n  onUserRemoveHandler: (id: string) => void\r\n}\r\n\r\nconst DashboardDrawer = ({\r\n  title,\r\n  description,\r\n  creationDate,\r\n  membersList,\r\n  isAdmin,\r\n  isOpen,\r\n  setIsOpen,\r\n  onDescriptionSaveHandler,\r\n  onUserRemoveHandler\r\n}: DashboardDrawerProps) => {\r\n  const { classes } = useStyles()\r\n\r\n  const dashboardAuthor = membersList.filter((member) => member.role === 'Admin')[0]\r\n\r\n  const parsedDate = convertDate(creationDate)\r\n\r\n  return (\r\n    <Drawer\r\n      opened={isOpen}\r\n      onClose={setIsOpen}\r\n      position=\"right\"\r\n      size=\"xl\"\r\n      padding=\"xl\"\r\n      title={title}\r\n      classNames={{ drawer: classes.drawer, header: classes.drawerHeader }}\r\n    >\r\n      <Divider className={classes.divider} />\r\n      <ScrollArea style={{ height: 'calc(100vh - 70px)' }} className={classes.scrollArea}>\r\n        <header className={classes.authorHeader}>\r\n          <FaUser className={classes.title} />\r\n          <Text className={classes.title}>Made by</Text>\r\n        </header>\r\n\r\n        <section className={classes.authorSection}>\r\n          <UserIcon\r\n            username={dashboardAuthor.username}\r\n            imgUrl={dashboardAuthor.profilePictureURL}\r\n          />\r\n          <div className={classes.authorInfo}>\r\n            {dashboardAuthor.username}\r\n            <p className={classes.date}>{`on ${parsedDate}`}</p>\r\n          </div>\r\n        </section>\r\n\r\n        <Description\r\n          initialText={description}\r\n          onTextSavedHandler={\r\n            (descriptionText: string) => onDescriptionSaveHandler(descriptionText)\r\n            // eslint-disable-next-line react/jsx-curly-newline\r\n          }\r\n        />\r\n\r\n        <MembersList\r\n          title=\"Teams\"\r\n          membersList={membersList}\r\n          onDeleteHandler={onUserRemoveHandler}\r\n          isDeletable={isAdmin}\r\n        />\r\n      </ScrollArea>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default DashboardDrawer\r\n","import { useState, useContext } from 'react'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button } from '@mantine/core'\r\nimport { FaEllipsisH } from 'react-icons/all'\r\nimport { nanoid } from 'nanoid'\r\n\r\nimport KanbanColumn from '../../components/KanbanColumn/KanbanColumn'\r\nimport useStyles from './style'\r\nimport UserIconList from '../../components/UserIconList/UserIconList'\r\nimport TaskModal from '../../components/TaskModal/TaskModal'\r\nimport { DashboardsContext } from '../../contexts/DashboardsContext'\r\nimport GenerateComment from '../../logic/generateComment'\r\nimport DashboardDrawer from '../../components/DashboardDrawer/DashboardDrawer'\r\n\r\nconst DashboardPage = () => {\r\n  const { id: dashboardId } = useParams()\r\n  const [dashboards, setDashboards] = useContext(DashboardsContext)\r\n  const currentDashboard = dashboards.find(({ id }) => id === dashboardId)\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n  const [isDashboardDrawerOpen, setIsDashboardDrawerOpen] = useState(false)\r\n  const { classes } = useStyles()\r\n  const [currentIssue, setCurrentIssue] = useState()\r\n\r\n  const onDragEnd = (result) => {\r\n    const newColumns = currentDashboard.columns\r\n    const findColumnSource = newColumns.find(({ id }) => id === result.source.droppableId)\r\n    const findIssueSource = findColumnSource.tasks.find(({ id }) => id === result.draggableId)\r\n    const issueSourceIndex = findColumnSource.tasks.findIndex(\r\n      (issue) => issue.id === result.draggableId\r\n    )\r\n    const findColumnDestination = newColumns.find(({ id }) => id === result.destination.droppableId)\r\n\r\n    findColumnSource.tasks.splice(issueSourceIndex, 1)\r\n    findColumnDestination.tasks.splice(result.destination.index, 0, findIssueSource)\r\n\r\n    setDashboards([\r\n      ...dashboards.filter(({ id }) => id !== dashboardId),\r\n      {\r\n        ...currentDashboard,\r\n        columns: newColumns\r\n      }\r\n    ])\r\n  }\r\n\r\n  const onTaskModalCloseHandler = (updatedTask) => {\r\n    const columnToUpdate = currentDashboard.columns.filter(({ tasks }) =>\r\n      tasks.some(({ id }) => id === updatedTask.id)\r\n    )[0]\r\n    const updatedColumn = {\r\n      ...columnToUpdate,\r\n      tasks: columnToUpdate.tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task))\r\n    }\r\n\r\n    setIsModalOpen(false)\r\n    setDashboards([\r\n      ...dashboards.filter(({ id }) => id !== dashboardId),\r\n      {\r\n        ...currentDashboard,\r\n        columns: currentDashboard.columns.map((column) => {\r\n          if (column.id === updatedColumn.id) {\r\n            return updatedColumn\r\n          }\r\n\r\n          return column\r\n        })\r\n      }\r\n    ])\r\n  }\r\n\r\n  const onTaskEventHandler = (taskId, columnId) => {\r\n    const findColumn = currentDashboard.columns\r\n      .find(({ id }) => id === columnId)\r\n      .tasks.find(({ id }) => id === taskId)\r\n    setCurrentIssue(findColumn)\r\n    setIsModalOpen(true)\r\n  }\r\n  const onDescriptionSaveHandler = (descriptionText) => {\r\n    const updatedDashboard = { ...currentDashboard, description: descriptionText }\r\n\r\n    setDashboards([\r\n      ...dashboards.filter(({ id }) => id !== dashboardId),\r\n      {\r\n        ...updatedDashboard\r\n      }\r\n    ])\r\n  }\r\n  const onUserRemoveHandler = (userId) => {\r\n    const updatedDashboard = {\r\n      ...currentDashboard,\r\n      users: currentDashboard.users.filter((user) => user.id !== userId)\r\n    }\r\n\r\n    setDashboards([...dashboards.filter(({ id }) => id !== dashboardId), updatedDashboard])\r\n  }\r\n\r\n  // TODO addIng new columns with title\r\n  const onAddColumnHandler = () => {\r\n    const columns = [...currentDashboard.columns, { id: nanoid(), tasks: [] }]\r\n\r\n    setDashboards([\r\n      ...dashboards.filter(({ id }) => id !== dashboardId),\r\n      { ...currentDashboard, columns }\r\n    ])\r\n  }\r\n\r\n  const onTaskInitializeHandler = (columnId) => {\r\n    const newTask = {\r\n      id: nanoid(),\r\n      description: '',\r\n      assigneeList: [],\r\n      comments: [],\r\n      attachment: []\r\n    }\r\n    const newColumns = currentDashboard.columns.map((column) => {\r\n      if (column.id === columnId) {\r\n        return {\r\n          ...column,\r\n          tasks: [...column.tasks, newTask]\r\n        }\r\n      }\r\n      return column\r\n    })\r\n\r\n    setDashboards([\r\n      ...dashboards.filter(({ id }) => id !== dashboardId),\r\n      {\r\n        ...currentDashboard,\r\n        columns: newColumns\r\n      }\r\n    ])\r\n  }\r\n\r\n  const onTaskAddHandler = (taskId, title) => {\r\n    const updatedTask = {\r\n      ...currentDashboard.columns\r\n        .find(({ tasks }) => tasks.some(({ id }) => id === taskId))\r\n        .tasks.find(({ id }) => id === taskId),\r\n      title\r\n    }\r\n\r\n    setDashboards([\r\n      ...dashboards.filter(({ id }) => id !== dashboardId),\r\n      {\r\n        ...currentDashboard,\r\n        columns: currentDashboard.columns.map((column) => {\r\n          if (column.tasks.some(({ id }) => id === taskId)) {\r\n            return {\r\n              ...column,\r\n              tasks: column.tasks.map((task) => (task.id === taskId ? updatedTask : task))\r\n            }\r\n          }\r\n          return column\r\n        })\r\n      }\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Button classNames={{ root: classes.buttonGrayRoot }}>{currentDashboard.status}</Button>\r\n\r\n        <UserIconList listOfUsers={currentDashboard.users} isAppendable={false} iconLimit={4} />\r\n        <Button\r\n          style={{ marginLeft: 'auto' }}\r\n          classNames={{ root: classes.buttonGrayRoot }}\r\n          leftIcon={<FaEllipsisH />}\r\n          onClick={() => setIsDashboardDrawerOpen(true)}\r\n        >\r\n          Show Menu\r\n        </Button>\r\n      </div>\r\n      <div className={classes.columns}>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {currentDashboard.columns.map(({ id, title, tasks }, index) => (\r\n            <Droppable key={id} droppableId={id} index={index}>\r\n              {(provided) => (\r\n                <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                  <KanbanColumn\r\n                    ref={provided.innerRef}\r\n                    {...provided.droppableProps}\r\n                    columnId={id}\r\n                    title={title}\r\n                    tasks={tasks}\r\n                    onAddHandler={onAddColumnHandler}\r\n                    onTaskClickHandler={onTaskEventHandler}\r\n                    onCreateTaskHandler={onTaskAddHandler}\r\n                    onTaskInitializeHandler={onTaskInitializeHandler}\r\n                  />\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </DragDropContext>\r\n      </div>\r\n      {isModalOpen ? (\r\n        <TaskModal\r\n          isOpen={isModalOpen}\r\n          commentsList={[new GenerateComment().getComment]}\r\n          membersList={currentDashboard.users}\r\n          onCloseHandler={onTaskModalCloseHandler}\r\n          task={currentIssue}\r\n        />\r\n      ) : null}\r\n      <DashboardDrawer\r\n        title={currentDashboard.title}\r\n        description={currentDashboard.description}\r\n        creationDate={currentDashboard.createdAt}\r\n        membersList={currentDashboard.users}\r\n        isAdmin={false}\r\n        isOpen={isDashboardDrawerOpen}\r\n        setIsOpen={() => setIsDashboardDrawerOpen((prevState) => !prevState)}\r\n        onDescriptionSaveHandler={onDescriptionSaveHandler}\r\n        onUserRemoveHandler={onUserRemoveHandler}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default DashboardPage\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  modal: {\r\n    padding: 0\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    top: 10,\r\n    right: 10,\r\n    width: 32,\r\n    height: 32,\r\n    padding: 0,\r\n    color: 'white',\r\n    backgroundColor: '#1a64db',\r\n    '&:hover': {\r\n      backgroundColor: theme.colors.red[6]\r\n    }\r\n  },\r\n  cancelButton: {\r\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\r\n    '&:hover': {\r\n      color: '#FFF',\r\n      backgroundColor: theme.colors.red[6]\r\n    }\r\n  },\r\n  modalTitle: {\r\n    margin: 0\r\n  },\r\n  column: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: 10\r\n  },\r\n  row: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    gap: 10\r\n  },\r\n  footer: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    gap: 10\r\n  },\r\n  titleInput: {\r\n    border: `1px solid ${theme.colors.gray[1]}`\r\n  },\r\n  coverImage: {\r\n    height: 130,\r\n    width: '100%',\r\n    objectFit: 'cover',\r\n    borderRadius: 20,\r\n    marginBottom: 10\r\n  },\r\n  popTarget: {\r\n    width: '100%'\r\n  },\r\n  tooltip: {\r\n    color: '#FFF',\r\n    backgroundColor: theme.colors.red[6]\r\n  },\r\n  spanner: {\r\n    width: '100%'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { useState } from 'react'\r\nimport { Popover, Modal, Input, Tooltip } from '@mantine/core'\r\nimport { BsGlobe, IoMdLock, MdImage, AiOutlinePlus } from 'react-icons/all'\r\n\r\n// Components\r\nimport ImagePicker from '../ImagePicker/ImagePicker'\r\nimport BlueBtn from '../BlueBtn/BlueBtn'\r\nimport GrayButton from '../GrayButton/GrayButton'\r\nimport GrayButtonFilled from '../GrayButtonFilled/GrayButtonFilled'\r\n\r\n// Logic\r\nimport GenerateId from '../../logic/generateId'\r\nimport GenerateImage from '../../logic/generateImage'\r\n\r\nimport useStyles from './style'\r\n\r\ntype DashboardModalProps = {\r\n  isOpen: boolean\r\n  setIsOpen: () => void\r\n  onCloseHandler: (dashboard: {\r\n    id: string\r\n    imageCoverUrl: string\r\n    title: string\r\n    status: boolean\r\n  }) => void\r\n}\r\n\r\nconst DashboardModal = ({ isOpen, setIsOpen, onCloseHandler }: DashboardModalProps) => {\r\n  const { classes } = useStyles()\r\n  const boardId = new GenerateId().getId\r\n  const generatedImage = new GenerateImage(boardId).getImage\r\n  const [currentCoverImageUrl, setCurrentCoverImageUrl] = useState(generatedImage)\r\n  const [currentTitle, setCurrentTitle] = useState('')\r\n  const [visibleImagePicker, setVisibleImagePicker] = useState(false)\r\n  const [isPrivate, setIsPrivate] = useState(false)\r\n  const [tooltipOpened, setTooltipOpened] = useState(false)\r\n\r\n  const onCreateBoardHandler = () => {\r\n    if (currentTitle) {\r\n      onCloseHandler({\r\n        id: boardId,\r\n        imageCoverUrl: currentCoverImageUrl,\r\n        title: currentTitle,\r\n        status: isPrivate\r\n      })\r\n      setIsOpen()\r\n    } else {\r\n      setTooltipOpened(true)\r\n    }\r\n  }\r\n\r\n  const onImagePickerHandler = (val: string) => {\r\n    setCurrentCoverImageUrl(val)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      classNames={{ root: classes.modal, close: classes.closeButton, header: classes.modalTitle }}\r\n      opened={isOpen}\r\n      onClose={setIsOpen}\r\n      centered\r\n      overflow=\"inside\"\r\n      size=\"340px\"\r\n    >\r\n      {currentCoverImageUrl ? (\r\n        <img src={currentCoverImageUrl} className={classes.coverImage} alt=\"Cover\" />\r\n      ) : null}\r\n      <section className={classes.column}>\r\n        <Tooltip\r\n          classNames={{ body: classes.tooltip, arrow: classes.tooltip }}\r\n          label=\"This field must not be empty\"\r\n          withArrow\r\n          opened={tooltipOpened}\r\n        >\r\n          <Input\r\n            className={classes.titleInput}\r\n            radius=\"md\"\r\n            placeholder=\"Add board title\"\r\n            invalid={tooltipOpened}\r\n            onChange={\r\n              (event: React.ChangeEvent<HTMLInputElement>) => {\r\n                setCurrentTitle(event.target.value)\r\n                setTooltipOpened(false)\r\n              }\r\n              // eslint-disable-next-line react/jsx-curly-newline\r\n            }\r\n          />\r\n        </Tooltip>\r\n        <section className={classes.row}>\r\n          <Popover\r\n            opened={visibleImagePicker}\r\n            onClose={() => setVisibleImagePicker(false)}\r\n            target={\r\n              <GrayButtonFilled\r\n                onClick={() => setVisibleImagePicker((prevState: boolean) => !prevState)}\r\n                leftIcon={<MdImage />}\r\n              >\r\n                Cover\r\n              </GrayButtonFilled>\r\n            }\r\n            position=\"left\"\r\n            placement=\"start\"\r\n            width={260}\r\n            spacing={0}\r\n            radius=\"md\"\r\n            className={classes.popTarget}\r\n          >\r\n            <ImagePicker imageSize=\"small\" onImageSelectedHandler={onImagePickerHandler} />\r\n          </Popover>\r\n          <GrayButtonFilled\r\n            onClick={() => setIsPrivate((prevState: boolean) => !prevState)}\r\n            leftIcon={isPrivate ? <IoMdLock /> : <BsGlobe />}\r\n          >\r\n            {isPrivate ? 'Private' : 'Public'}\r\n          </GrayButtonFilled>\r\n        </section>\r\n        <section className={classes.footer}>\r\n          <div className={classes.spanner} />\r\n          <GrayButton className={classes.cancelButton} onClick={setIsOpen}>\r\n            Cancel\r\n          </GrayButton>\r\n          <BlueBtn leftIcon={<AiOutlinePlus />} onClick={onCreateBoardHandler}>\r\n            Create\r\n          </BlueBtn>\r\n        </section>\r\n      </section>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DashboardModal\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  dashboardMain: {\r\n    border: '1px solid',\r\n    borderColor: theme.colors.gray[2],\r\n    borderRadius: theme.radius.md,\r\n    padding: 4,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: 5\r\n    }\r\n  },\r\n  title: { fontFamily: theme.other.secondaryFont },\r\n  userList: {\r\n    alignSelf: 'flex-start'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import { Image, Text } from '@mantine/core'\r\nimport PropTypes from 'prop-types'\r\nimport UserIconList from '../UserIconList/UserIconList'\r\nimport useStyles from './style'\r\n\r\nexport const Dashboard = ({ title, imageCoverUrl, users, onClickHandler }) => {\r\n  const { classes } = useStyles()\r\n  return (\r\n    <div\r\n      className={classes.dashboardMain}\r\n      onClick={onClickHandler}\r\n      onKeyUp={(e) => {\r\n        if (e.which === 13) {\r\n          onClickHandler()\r\n        }\r\n      }}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n    >\r\n      <Image src={imageCoverUrl} alt=\"cover\" fit=\"cover\" radius=\"md\" />\r\n      <Text className={classes.title}>{title}</Text>\r\n      <div className={classes.userList}>\r\n        <UserIconList listOfUsers={users} isAppendable={false} iconLimit={3} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nDashboard.propTypes = {\r\n  title: PropTypes.string,\r\n  imageCoverUrl: PropTypes.string,\r\n  users: PropTypes.instanceOf(Array),\r\n  onClickHandler: PropTypes.func\r\n}\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  container: {\r\n    padding: '80px 60px'\r\n  },\r\n  boardsHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    margin: '10px 0'\r\n  },\r\n  title: {\r\n    fontFamily: theme.headings.fontFamily,\r\n    fontSize: 18\r\n  },\r\n  dashboards: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(4, 1fr)',\r\n    gridTemplateRows: 'repeat(2, 300px)',\r\n    gridGap: 20\r\n  },\r\n  columns: {\r\n    display: 'flex',\r\n    padding: 10,\r\n    margin: 10\r\n  },\r\n  buttonGrayRoot: {\r\n    backgroundColor: theme.colors.gray[0],\r\n    color: theme.colors.gray[6],\r\n    fontSize: '14px',\r\n    lineHeight: '18px',\r\n    transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\r\n    '&:hover': {\r\n      color: '#FFF',\r\n      backgroundColor: theme.fn.darken(theme.colors.gray[0], 0.2)\r\n    }\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","/* eslint-disable no-console */\r\nimport { useState, useContext } from 'react'\r\nimport { Text, Button } from '@mantine/core'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n// Components\r\nimport { AiOutlinePlus } from 'react-icons/all'\r\nimport DashboardModal from '../../components/DashboardModal/DashboardModal'\r\nimport { Dashboard } from '../../components/Dashboard/Dashboard'\r\n\r\n// Contexts & routes\r\nimport { DashboardsContext } from '../../contexts/DashboardsContext'\r\n\r\n// Logic\r\nimport RandomUser, { RandomUserType } from '../../logic/randomUser'\r\nimport GenerateTask from '../../logic/generateTask'\r\n\r\n// Styles\r\nimport useStyles from './style'\r\n\r\ntype DashboardProps = {\r\n  id: string\r\n  imageCoverUrl: string\r\n  title: string\r\n  status: boolean\r\n}\r\n\r\nconst DashboardsPage = () => {\r\n  const { classes } = useStyles()\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [dashboards, setDashboards] = useContext(DashboardsContext)\r\n\r\n  const openDashboardModal = () => {\r\n    setIsOpen((prevStateIsOpen) => !prevStateIsOpen)\r\n  }\r\n\r\n  const addNewDashboard = ({ id, imageCoverUrl, title, status }: DashboardProps) => {\r\n    const currentUser = new RandomUser().userData\r\n    currentUser.role = 'Admin'\r\n    const createdAt = new Date()\r\n    const users: RandomUserType[] = []\r\n    users.push(currentUser)\r\n    const newDashboard = {\r\n      id,\r\n      description: '',\r\n      imageCoverUrl,\r\n      title,\r\n      createdAt,\r\n      users,\r\n      status,\r\n      admin: 'userId',\r\n      columns: [\r\n        {\r\n          id: '2',\r\n          title: 'New column',\r\n          tasks: [new GenerateTask(users)]\r\n        },\r\n        {\r\n          id: '3',\r\n          tasks: []\r\n        }\r\n      ]\r\n    }\r\n    setDashboards([...dashboards, newDashboard])\r\n  }\r\n\r\n  return (\r\n    <article className={classes.container}>\r\n      <header className={classes.boardsHeader}>\r\n        <Text className={classes.title}>All Boards</Text>\r\n        <Button onClick={openDashboardModal} leftIcon={<AiOutlinePlus />}>\r\n          Add\r\n        </Button>\r\n      </header>\r\n      <section className={classes.dashboards}>\r\n        {dashboards.map(({ id, title, users, imageCoverUrl }) => (\r\n          <Dashboard\r\n            key={id}\r\n            title={title}\r\n            users={users}\r\n            imageCoverUrl={imageCoverUrl}\r\n            onClickHandler={() => navigate(`${id}`)}\r\n          />\r\n        ))}\r\n      </section>\r\n      <DashboardModal\r\n        isOpen={isOpen}\r\n        setIsOpen={openDashboardModal}\r\n        onCloseHandler={addNewDashboard}\r\n      />\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default DashboardsPage\r\n","import { Route, Routes } from 'react-router-dom'\r\nimport DashboardPage from '../pages/DashboardPage/DashboardPage'\r\nimport DashboardsPage from '../pages/DashboardsPage/DashboardsPage'\r\n\r\nexport const routes = {\r\n  dashboards: 'dashboards',\r\n  dashboard: 'dashboards/:id'\r\n}\r\n\r\nconst RoutesDashboards = () => (\r\n  <Routes>\r\n    <Route path={routes.dashboards} element={<DashboardsPage />} />\r\n    <Route path={routes.dashboard} element={<DashboardPage />} />\r\n  </Routes>\r\n)\r\nexport default RoutesDashboards\r\n","import { createStyles } from '@mantine/core'\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  navbar: {\r\n    display: 'flex',\r\n    flexWrap: 'nowrap',\r\n    height: '68px',\r\n    boxShadow: '0px 2px 2px 0px #0000000D',\r\n    padding: '12px'\r\n  },\r\n  navbar__logo: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& img': {\r\n      margin: '0 10px'\r\n    },\r\n    '& h1': {\r\n      margin: 0,\r\n      fontSize: '18px',\r\n      fontFamily: theme.headings.fontFamily,\r\n      color: '#333333'\r\n    }\r\n  },\r\n  navbar__dashboard: {\r\n    margin: '0 30px 0 90px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n\r\n    '& h2': {\r\n      margin: 0,\r\n      fontSize: '18px',\r\n      fontFamily: theme.headings.fontFamily,\r\n      weight: 500,\r\n      color: '#333333'\r\n    },\r\n    '& > div': {\r\n      margin: '0 24px',\r\n      width: '0px',\r\n      height: '35px',\r\n      border: '1px solid #E0E0E0'\r\n    }\r\n  },\r\n  navbar__options: {\r\n    display: 'flex',\r\n    marginLeft: 'auto',\r\n    alignItems: 'center'\r\n  },\r\n  navbar__options__select__wrapper: {\r\n    margin: '0 15px 0 60px'\r\n  },\r\n  navbar__options__select__input: {\r\n    border: 0\r\n  },\r\n  navbar__options__select__icon: {\r\n    margin: '0 30px 0 -10px'\r\n  },\r\n  navbar__options__select__rightSection: {\r\n    margin: '0 30px 0 0'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","/* eslint-disable @typescript-eslint/no-empty-function */\r\n/* eslint-disable arrow-body-style */\r\nimport { Select } from '@mantine/core'\r\nimport { AiFillCaretDown } from 'react-icons/ai'\r\nimport { IoApps } from 'react-icons/io5'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { RandomUserType } from '../../logic/randomUser'\r\nimport { routes } from '../../routes/RoutesDashboards'\r\nimport GrayButtonFilled from '../GrayButtonFilled/GrayButtonFilled'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\nimport useStyles from './styles'\r\n\r\nexport type NavbarProps = {\r\n  loggedUser: RandomUserType\r\n  boardTitle?: string\r\n}\r\n\r\nconst Navbar = ({ boardTitle, loggedUser }: NavbarProps) => {\r\n  const { classes } = useStyles()\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <nav className={classes.navbar}>\r\n      <div className={classes.navbar__logo}>\r\n        <img src=\"/thullo_logo.png\" width=\"32px\" height=\"29px\" alt=\"Thullo logo\" />\r\n        <h1>Thullo</h1>\r\n      </div>\r\n      {boardTitle && (\r\n        <div className={classes.navbar__dashboard}>\r\n          <h2>{boardTitle}</h2>\r\n          <div />\r\n          <GrayButtonFilled onClick={() => navigate(routes.dashboards)} leftIcon={<IoApps />}>\r\n            All board\r\n          </GrayButtonFilled>\r\n        </div>\r\n      )}\r\n      <div className={classes.navbar__options}>\r\n        <SearchBar\r\n          onKeywordChangeHandler={() => {}}\r\n          size=\"sm\"\r\n          actionType=\"button\"\r\n          wrapperProps={{ width: '300px' }}\r\n        />\r\n        <Select\r\n          classNames={{\r\n            wrapper: classes.navbar__options__select__wrapper,\r\n            input: classes.navbar__options__select__input,\r\n            icon: classes.navbar__options__select__icon,\r\n            rightSection: classes.navbar__options__select__rightSection\r\n          }}\r\n          placeholder={loggedUser.username}\r\n          data={[\r\n            { value: 'react', label: 'React' },\r\n            { value: 'vue', label: 'Vue' }\r\n          ]}\r\n          icon={<img src={loggedUser.profilePictureURL} alt=\"user avatar\" />}\r\n          rightSection={<AiFillCaretDown />}\r\n        />\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { FC } from 'react'\r\nimport { MantineProvider } from '@mantine/styles'\r\n\r\nexport const ThemeProvider: FC = ({ children }) => (\r\n  <MantineProvider\r\n    withNormalizeCSS\r\n    withGlobalStyles\r\n    theme={{\r\n      fontFamily: 'Open Sans',\r\n      colors: {\r\n        gray: [\r\n          '#F2F2F2',\r\n          '#E0E0E0',\r\n          '#BDBDBD',\r\n          '#AFAFAF',\r\n          '#A0A0A0',\r\n          '#919191',\r\n          '#828282',\r\n          '#696969',\r\n          '#4F4F4F',\r\n          '#333333'\r\n        ]\r\n      },\r\n      headings: {\r\n        fontFamily: 'Poppins'\r\n      },\r\n      other: {\r\n        secondaryFont: 'Poppins'\r\n      }\r\n    }}\r\n  >\r\n    {children}\r\n  </MantineProvider>\r\n)\r\n","import { FC, useState, useMemo } from 'react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport { ThemeProvider } from './contexts/ThemeContext'\r\nimport RandomUser from './logic/randomUser'\r\nimport {\r\n  DashboardsContext,\r\n  dashboardsDefaultValue,\r\n  IDashboardsContext\r\n} from './contexts/DashboardsContext'\r\nimport RoutesDashboards from './routes/RoutesDashboards'\r\n\r\nexport const App: FC = () => {\r\n  const [dashboards, setDashboards] = useState(dashboardsDefaultValue)\r\n  const memoizedDashboardsContext = useMemo(\r\n    () => [dashboards, setDashboards],\r\n    [dashboards]\r\n  ) as IDashboardsContext\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <DashboardsContext.Provider value={memoizedDashboardsContext}>\r\n        <BrowserRouter>\r\n          <Navbar loggedUser={new RandomUser().userData} boardTitle=\"test\" />\r\n          <RoutesDashboards />\r\n        </BrowserRouter>\r\n      </DashboardsContext.Provider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","import { StrictMode } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { App } from './App'\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}